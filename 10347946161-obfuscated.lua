-- This file was generated using Luraph Obfuscator v13.5.9

return(function(hV,vV,SV,aV,GV,LV,BV,NV,XV,gV,UV,lV,zV,jV,CV,VV,ZV,xV,wV,FV,MV,qV,mV,tV,HV,bV,EV,iV,TV,YV,yV,KV,sV,dV,nV,AV,cV,QV,f,...)local u,i,J=nil,nil,(nil);local o,p=xV,pcall;local PV=0X0;local k,I=LV,tostring;repeat if PV<=0 then u=string.sub;PV=0X1;else if PV==1 then i={[0]=1};PV=0X2;else J=string.char;do PV=0X3;end;end;end;until PV==0X0003;local L,r=string.gsub,(tonumber);do PV=0X0;end;local y,R,x,w,IV=nil,nil,nil,nil,(nil);while PV~=5 do if PV<=0X001 then if PV~=0 then w={XV,5,4};do PV=3;end;else do y=4294967296;end;PV=0X2;end;else do if PV<=0X02 then R=gV;do PV=4;end;else do if PV==0X00003 then IV=1;do PV=5;end;else do x=VV;end;PV=0X1;end;end;end;end;end;end;local t,d,X=y-0x1,next,(aV);local C,h,l=rawset,CV,(unpack or table.unpack);local A=(dV);local K=((A and A()or nV));local b={[0X00]={[0]=0,1,0X2,3,4,0X5,mV,XV,8,9,lV,11,12,13,14,15},{[0]=1,0X00,0X3,2,5,0X4,7,6,0x9,MV,AV,lV,0XD,0Xc,15,14},{[0X0]=2,3,0x0,0x001,6,7,4,0x0005,lV,11,8,9,0XE,0Xf,0xc,0X00d},{[0X0000]=0X0003,2,0x1,0X000,7,0X0006,5,4,11,0X0000A,9,MV,0Xf,0XE,0xd,0Xc},{[0]=0x4,0x5,mV,0X7,KV,1,0X2,3,12,0XD,0XE,YV,0X8,9,0xA,11},{[0X0]=0X00005,0X04,7,6,1,0X0,UV,2,13,0XC,0XF,0x0000E,9,0X08,0Xb,0XA},{[0X00]=0X6,7,4,0X00005,0X02,0X3,0X0,1,0Xe,0xf,12,13,10,11,8,0x9},{[0X0]=7,6,0X005,4,0x0003,0X00002,1,0,0XF,0x0000E,sV,12,11,0XA,9,0X00008},{[0]=8,9,10,11,12,13,0Xe,15,0,0x01,0X2,0X3,0x04,vV,6,7},{[0X0]=9,8,11,0Xa,13,0X0000C,15,NV,0X1,0,3,2,0X5,4,0x7,6},{[0]=10,11,0X08,0X9,0xE,15,12,13,0X002,3,KV,0X1,6,0X00007,4,0X05},{[0X0]=11,0Xa,9,8,0Xf,0X000E,sV,12,3,0X2,0x1,KV,0X7,6,0X5,4},{[0X0]=12,0x0D,14,15,0x8,0X9,10,11,0X4,5,0X6,0X7,0,1,0x2,3},{[0]=0Xd,12,0xf,14,9,8,11,0xA,vV,4,7,0X6,QV,0X00,0X3,2},{[0]=14,15,0Xc,13,10,11,0X8,0x9,0X0006,0X7,0X4,5,0X2,3,0,1},{[0]=15,0XE,0XD,12,11,0XA,9,8,7,0X6,0x00005,4,3,0x2,0X1,0}};local D=(hV);PV=3;local U,Y,g,s,v,Q,B,N,H,M,G,kV,j,z,F=nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,(nil);repeat if not(PV<=8)then if not(PV<=0x0c)then if PV<=14 then if PV==13 then do N=function()local ZY,MY,YY,RY=D(U,Y,Y+0X3);do for Ls=0X00000,1 do if Ls==0X0 then Y=Y+0x00004;else return RY*0X1000000+YY*65536+MY*256+ZY;end;end;end;end;end;PV=0X1;else kV={};PV=0x10;end;else if not(PV<=15)then if PV==16 then do local iJ,SJ=0X001,(nil);while iJ<0x2 do if iJ~=0X0 then do SJ=2;end;iJ=0x000;else do for KT=1,31 do do i[KT]=SJ;end;SJ=SJ*0x2;end;end;iJ=0X2;end;end;end;PV=0xA;else B=0X0002^0X34;PV=13;end;else Q=0X80000000;PV=0X011;end;end;else if PV<=10 then if PV~=0x00009 then j=function(rE,jE,mE)local TE=(rE/i[jE])%i[mE];do TE=TE-TE%1;end;return TE;end;PV=2;else v=function()local Jk,Nk=1,(nil);while(true)do if Jk<=0x0 then Y=Y+0X1;do Jk=2;end;else if Jk~=1 then return Nk;else Nk=D(U,Y,Y);do Jk=0X0000;end;end;end;end;end;PV=15;end;else if PV==11 then PV=0Xc;else U=L(u(U,vV),'\046\046',function(qs)do if D(qs,0X00002)~=72 then local Zj,ej=1,nil;while Zj<=1 do if Zj~=0 then do ej=J(r(qs,16));end;Zj=0X00;else if s then local UG=(nil);local gG=0X0;while(true)do if gG<=0 then UG=x(ej,s);gG=0X01;else if gG~=0X1 then return UG;else s=tV;do gG=0x002;end;end;end;end;else do return ej;end;end;do Zj=2;end;end;end;else local bx=0;repeat if bx~=0 then do return BV;end;else s=r(u(qs,1,1));bx=0x00001;end;until(false);end;end;end);do PV=0X0009;end;end;end;end;elseif not(PV<=0x0003)then if not(PV<=0x5)then if PV<=0X0006 then F=(iV or jV);break;else if PV==7 then g=yV;PV=11;else do PV=0X007;end;end;end;else do if PV~=0X4 then M=HV;PV=0X00;else Y=QV;PV=0X008;end;end;end;else if PV<=0X0001 then if PV==0X0 then G=function()local ph,Ah=nil,nil;for lD=0,0x2 do do if lD<=0 then ph,Ah=N(),N();else if lD~=1 then do return Ah*y+ph;end;else if Ah>=Q then Ah=Ah-y;end;end;end;end;end;end;PV=0X000E;else H=Q-1;PV=5;end;else do if PV~=0x002 thendo PV=4;end;else z=function()local ob,fb=nil,nil;do for PP=0x0,0X2 do if PP<=0 then ob=N();else if PP~=0x1 then if not(ob==0X0 and fb==0)then else do return 0x00000;end;end;else fb=N();end;end;end;end;local Yb=(0X1);local Jb=(-1)^j(fb,31,1);local mb=j(fb,20,0X0B);local nb=(j(fb,0,0x14)*y+ob);local gb=0;while(true)do do if gb==0X00 then if mb==0X0 then if nb~=0X0 then local RH=(0x01);repeat if RH==0 then do Yb=0;end;do RH=2;end;else mb=0x1;RH=0;end;until RH>1;else return Jb*KV;end;elseif mb==0X007Ff then if nb~=0 then do return Jb*(1/0X000);end;else do return Jb*(0X00000/0);end;end;end;gb=0X00001;else return Jb*(2^(mb-1023))*(nb/B+Yb);end;end;end;end;do PV=6;end;end;end;end;end;until false;local Z=(F and F.bxor or function(z7,g7)local G7=(0X05);local w7,j7=nil,nil;repeat if G7<=2 then if not(G7<=0X0)then if G7==0X01 then return w7+z7*j7+g7*j7;else j7=QV;G7=0;end;else do while z7>0X00 and g7>0 do local QD,xD=g7%0x0010,(0X1);local oD=z7%16;do while xD~=0X00004 do if xD<=1 then if xD~=0X000 then w7=w7+b[oD][QD]*j7;xD=2;else j7=j7*0X10;do xD=4;end;end;else if xD~=0X2 then g7=(g7-QD)/0X10;do xD=0;end;else do z7=(z7-oD)/GV;end;xD=0x3;end;end;end;end;end;end;G7=1;end;else do if not(G7<=3)then if G7==4 then w7=0;G7=0X3;else do z7=z7%y;end;G7=4;end;else g7=g7%y;do G7=0X002;end;end;end;end;until false;end);local S=(F and F.band or function(fM,RM)do for Of=0,0X2 do if not(Of<=0X0000)then if Of~=0X1 then do return((fM+RM)-Z(fM,RM))/0X00002;end;else RM=RM%y;end;else fM=fM%y;end;end;end;end);local q=(F and F.bor or function(m9,U9)local k9=(1);while 0.4178856106419535 do if k9<=0X000 then do U9=U9%y;end;k9=2;else if k9==0X1 then do m9=m9%y;end;k9=0x000;else return t-S(t-m9,t-U9);end;end;end;end);local T,c,E=F and F[zV]or function(r8)return t-(r8%y);end,F and F.lshift,F and F.rshift;do c=c or function(f3,O3)if O3>=32 then return 0X0;end;if O3<0x0 then return E(f3,-O3);end;do return(f3*i[O3])%y;end;end;end;E=E or function(UN,BN)do if BN>=32 then do return 0x00000;end;end;end;if not(BN<0)then else return c(UN,-BN);end;local yN=(UN%y/i[BN]);do return yN-yN%0X1;end;end;local O=(function()local az,Qz=0,0X0;while 0x41042787 do local o6=(D(U,Y,Y));Y=Y+1;az=q(az,c(S(o6,127),Qz));if S(o6,0x80)==0 then do return az;end;end;Qz=Qz+7;end;end);PV=0X2;local P,m,W,pV=nil,nil,nil,nil;while'\106\045~\126!\074\100l'do if PV<=0x0001 then do if PV==0X0 then W=function()local e0,k0=0X0,nil;while(true)do if e0<=0 then k0=O();e0=1;else if e0==0X1 then if not(k0>H)then else return k0-y;end;e0=2;else return k0;end;end;end;end;do PV=3;end;else m=bV.yield;PV=0X00000;end;end;elseif PV==2 then P={[0X3]=0,[5]=0x6,[0X0]=0X3,[XV]=0X3,[9]=8,[KV]=0x7,[1]=8,[6]=0X0003,[0X09]=3,[4]=0X1};PV=1;else pV=function(...)return o('#',...),{...};end;do break;end;end;end;local a=rawget;local fV=v();local eV=v();PV=0X9;local oV,rV,RV,V,uV,e,DV,JV=nil,nil,nil,nil,nil,nil,nil,nil;do repeat if not(PV<=5)then if not(PV<=8)then do if PV<=9 then do oV=function(AP)local fP,iP,FP=1,nil,nil;while fP~=2 do if fP==0 then FP=Z(iP[1],eV);fP=2;else iP={D(U,Y,Y+3)};fP=0X00;end;end;local tP=Z(iP[2],eV);local ZP=(Z(iP[3],eV));local bP=Z(iP[FV],eV);fP=0x0;repeat do if not(fP<=0)then if fP==0x00001 then return bP*0X00001000000+ZP*65536+tP*256+FP;else do Y=Y+4;end;do fP=0X001;end;end;else eV=(185*eV+AP)%256;fP=0X002;end;end;until(false);end;end;do PV=0X6;end;else if PV==10 then PV=0x4;else V=ZV.insert;PV=0xa;end;end;end;elseif not(PV<=0X00006)then do if PV~=0x0007 then return uV(K,nil,JV)(...);else kV[0X1]=RV;PV=0X2;end;end;else rV=function(Rk)local vk,lk=nil,nil;for eD=0X0000,0x00002 do do if not(eD<=0)then if eD==1 then lk="";else for Dx=0X1,vk,7997 do local mx=Dx+7997-0X1;do if not(mx>vk)then else mx=vk;end;end;local yx=0X2;local ex=(nil);while yx<=2 do if not(yx<=0x0)then if yx~=1 then ex={D(U,Y+Dx-0X01,Y+mx-1)};yx=0X0;else lk=lk..J(l(ex));yx=3;end;else do for lI=QV,#ex do local jI=0x00;repeat do if jI==0 then(ex)[lI]=Z(ex[lI],fV);do jI=1;end;else fV=(Rk*fV+93)%256;jI=2;end;end;until jI>=2;end;end;yx=1;end;end;end;end;else vk=N();end;end;end;do Y=Y+vk;end;return lk;end;PV=0X003;end;else do if not(PV<=2)then if PV<=0X00003 then RV={};PV=0x0B;else do if PV==4 then function uV(Wm,cm,Xm)local mm,dm,wm=Xm[0x0006],Xm[1],(Xm[4]);local Em=(Xm[7]);local Ym,hm=Xm[0X9],(Xm[2]);local tm,xm=Xm[8],(Xm[3]);local bm=(X({},{__mode="v"}));local Qm=nil;Qm=function(...)local OV,WV,qD=1,0X000,{};local fD=({[1]=Xm,[2]=qD});local gD=((A and A()or _ENV));local nD,iD=pV(...);nD=nD-0x1;for F8=0,nD do if not(wm>F8)then do break;end;else qD[F8]=iD[F8+0x1];end;end;local TD=((gD==K and Wm or gD));if not Em then iD=nil;else if not(Ym)then else qD[wm]={n=nD>=wm and nD-wm+1 or 0X0,l(iD,wm+0X00001,nD+1)};end;end;if TD~=gD then do if not(M)then _ENV=TD;else M(Qm,TD);end;end;end;local KD,WD,bD,yD=p(function()repeat local qZ=mm[OV];local aZ=(qZ[2]);OV=OV+0x1;if not(aZ<0X0002e)then if not(aZ>=69)then do if not(aZ>=57)then if aZ>=51 then if aZ>=0x36 then if aZ<55 then do(qD)[qZ[0X05]]=qZ[0X1];end;else if aZ~=0X0038 then qD[qZ[5]]=qD[qZ[4]]<qD[qZ[0X7]];else if not(qD[qZ[0X4]]<=qD[qZ[0X7]])then else OV=qZ[5];end;end;end;else if not(aZ<0x34)then if aZ~=53 then repeat local HE,PE=bm,qD;if#HE>0 then local tx={};for Dv,bv in d,HE do for y3,H3 in d,bv do if not(H3[1]==PE and H3[2]>=0)then else local I_=H3[0X2];if not tx[I_]then(tx)[I_]={PE[I_]};end;(H3)[1]=tx[I_];(H3)[2]=0x1;end;end;end;end;until true;return true,qZ[5],0;else local Sr=cm[qZ[0X4]];Sr[0x1][Sr[2]]=qD[qZ[5]];end;else qD[qZ[5]]={};end;end;else if not(aZ<0x30)then if not(aZ>=49)then for FH=qZ[0X5],qZ[0X4]do qD[FH]=nil;end;else if aZ~=0X0032 then qD[qZ[5]]=qD[qZ[4]]~=qD[qZ[7]];else local fv=(qZ[0X5]);local jv=h(function(...)m();for TE in...do(m)(true,TE);end;end);jv(qD[fv],qD[fv+1],qD[fv+2]);WV=fv;qD[fv]=jv;OV=qZ[0X4];end;end;else if aZ==0X002f then qD[qZ[5]]=E(qD[qZ[0X4]],qD[qZ[7]]);else local sn=(qZ[5]);local In=(qZ[7]-1)*50;local mn=(qD[sn]);do for OB=0X1,qZ[4]do do mn[In+OB]=qD[sn+OB];end;end;end;end;end;end;else if not(aZ>=63)then if not(aZ>=0X3c)then if aZ>=0X3A then if aZ~=0X3b then repeat local mh,vh=bm,qD;if#mh>0 then local yn={};for Fx,ex in d,mh do for Ld,Xd in d,ex do if Xd[1]==vh and Xd[0X002]>=0x000 then local eD=Xd[0X2];if not(not yn[eD])then else(yn)[eD]={vh[eD]};end;(Xd)[0x1]=yn[eD];(Xd)[0X00002]=0x00001;end;end;end;end;until true;local Py=(qZ[5]);do return false,Py,Py;end;else if not(not(qD[qZ[0X4]]<qD[qZ[0X007]]))then else do OV=qZ[0X5];end;end;end;else do(qD)[qZ[0X5]]=qD[qZ[0X4]]%qD[qZ[0X7]];end;end;else if aZ<0X00003d then do if qZ[7]==0x00006B then OV=OV-0X01;mm[OV]={[0X5]=(qZ[5]-212),[2]=84,[4]=(qZ[4]-212)};else qD[qZ[0X5]]=nil;end;end;else if aZ~=0X3E then qD[qZ[5]]=qD[qZ[4]]>=qD[qZ[7]];else local Me=qZ[5];local Ve,We=qD[Me]();if Ve then OV=qZ[4];(qD)[Me+3]=We;end;end;end;end;else if aZ<66 then do if aZ<0X40 then local iK=qZ[0X5];qD[iK]=qD[iK](l(qD,iK+1,WV));WV=iK;else if aZ~=0x41 then kV[qZ[0X4]]=qD[qZ[5]];else local er=qZ[0x05];qD[er](qD[er+0X1],qD[er+0x02]);do WV=er-0X0001;end;end;end;end;else do if aZ>=0X000043 then if aZ~=68 then repeat local ve,te=bm,qD;if#ve>0X0 then local zq={};for Mn,Gn in d,ve do for wM,mM in d,Gn do do if not(mM[1]==te and mM[0X2]>=0X00)then else local Va=(mM[0X2]);if not(not zq[Va])then else do(zq)[Va]={te[Va]};end;end;mM[0X1]=zq[Va];do(mM)[0X2]=1;end;end;end;end;end;end;until true;return;else do(qD)[qZ[5]]=TD[qZ[1]];end;end;else local pn=(qZ[0X5]);local Kn,Gn=qD[pn]();if not(Kn)then else qD[pn+0X1]=Gn;do OV=qZ[4];end;end;end;end;end;end;end;end;else do if not(aZ>=0X50)then if aZ<0X4a then if aZ<71 then if aZ==70 then local iq=(qZ[5]);qD[iq](qD[iq+0x1]);WV=iq-1;else qD[qZ[0X5]]=qD[qZ[4]]%qZ[3];end;else if aZ<0X48 then qD[qZ[0X00005]]=qD[qZ[4]];else do if aZ==0X49 then do if qD[qZ[0X4]]==qZ[3]then else do OV=qZ[5];end;end;end;else local qI,TI=qZ[5],qD[qZ[0X4]];do(qD)[qI+1]=TI;end;(qD)[qI]=TI[qZ[0X3]];end;end;end;end;else if not(aZ>=77)then if not(aZ>=0X4B)then local yf=(qZ[5]);(qD[yf])(l(qD,yf+1,WV));WV=yf-0x1;else if aZ~=0X4C then qD[qZ[5]]=qD[qZ[4]]^qD[qZ[0x07]];else do(qD)[qZ[0X005]]=qD[qZ[4]]<=qD[qZ[7]];end;end;end;else do if not(aZ>=78)then repeat local mp,hp=bm,qD;if not(#mp>0)then else local GX=({});for W3,N3 in d,mp do for mv,cv in d,N3 do do if not(cv[1]==hp and cv[0X0002]>=0)then else local cC=(cv[0X2]);if not(not GX[cC])then else GX[cC]={hp[cC]};end;cv[1]=GX[cC];cv[0X2]=1;end;end;end;end;end;until true;return true,qZ[0X5],0X001;else do if aZ~=79 then qD[qZ[5]][qD[qZ[4]]]=qZ[0x3];else do repeat local vy,Ey=bm,qD;do if not(#vy>0X0000)then else local yR=({});do for mo,Lo in d,vy do for N1,Y1 in d,Lo do do if not(Y1[1]==Ey and Y1[0X2]>=0X00000)then else local vR=(Y1[0X0002]);if not yR[vR]then do yR[vR]={Ey[vR]};end;end;Y1[0X1]=yR[vR];do Y1[0x2]=0X00001;end;end;end;end;end;end;end;end;until true;end;return false,qZ[0X5],WV;end;end;end;end;end;end;else if not(aZ>=0X56)then if aZ<83 then do if aZ>=0X51 then if aZ==0X000052 then local ld=cm[qZ[4]];do(qD)[qZ[0X5]]=ld[1][ld[2]];end;else WV=qZ[0x005];qD[WV]=qD[WV]();end;else qD[qZ[5]][qD[qZ[0X4]]]=qD[qZ[0X7]];end;end;else if aZ<84 then qD[qZ[5]]=fD[qZ[4]];else if aZ==85 then local XD=qZ[5];local BD=h(function(...)(m)();for lk,jk in...do(m)(true,lk,jk);end;end);(BD)(qD[XD],qD[XD+1],qD[XD+0X00002]);WV=XD;(qD)[XD]=BD;OV=qZ[4];else if qZ[7]==164 then OV=OV-1;(mm)[OV]={[0X2]=67,[4]=(qZ[4]-192),[0x005]=(qZ[0X5]-192)};else(qD)[qZ[0X00005]]=#qD[qZ[0X4]];end;end;end;end;else if not(aZ>=89)then if aZ<87 then local xi=(qZ[5]);local bi=(qZ[4]);WV=xi+bi-0X1;repeat local MD,eD=bm,(qD);if#MD>0 then local R7=({});do for lQ,xQ in d,MD do for oI,VI in d,xQ do if not(VI[1]==eD and VI[0x2]>=0)then else local Bm=(VI[2]);do if not R7[Bm]then R7[Bm]={eD[Bm]};end;end;(VI)[1]=R7[Bm];VI[0X2]=1;end;end;end;end;end;until true;return true,xi,bi;else do if aZ==0X58 then local ro=(qD[qZ[0X4]]/qD[qZ[0x7]]);qD[qZ[5]]=ro-ro%0x00001;else(qD)[qZ[0X05]]=qD[qZ[0x004]]==qD[qZ[0x07]];end;end;end;else if aZ>=0X5a then if aZ==0X5b then local ma=(qZ[5]);local qa=(qZ[0x4]);if qa~=0X0 then WV=ma+qa-0X1;end;local Ya,Ta=nil,nil;local Ja=(qZ[7]);do if qa~=0X001 then Ya,Ta=pV(qD[ma](l(qD,ma+1,WV)));else do Ya,Ta=pV(qD[ma]());end;end;end;if Ja~=0X1 then do if Ja~=0x0 then Ya=ma+Ja-2;WV=Ya+1;else Ya=Ya+ma-0X001;WV=Ya;end;end;local v6=(0);for m5=ma,Ya do v6=v6+1;(qD)[m5]=Ta[v6];end;else WV=ma-0X1;end;else(qD)[qZ[0x005]]=qD[qZ[0X4]]-qD[qZ[7]];end;else qD[qZ[0X05]]=Z(qD[qZ[4]],qD[qZ[7]]);end;end;end;end;end;end;else if not(aZ<23)then if not(aZ<34)then do if aZ<0X28 then if not(aZ<37)then do if aZ>=38 then if aZ~=39 then local fZ=(qZ[4]);local GZ=qD[fZ];for gZ=fZ+0X1,qZ[7]do GZ=GZ..qD[gZ];end;(qD)[qZ[5]]=GZ;else if qZ[7]~=0X86 then if not qD[qZ[0X05]]then do OV=qZ[0x004];end;end;else OV=OV-0X1;mm[OV]={[0X4]=(qZ[0X4]-0xb),[0x2]=0x47,[5]=(qZ[0X5]-11)};end;end;else if qZ[7]==0x0000AC then OV=OV-1;do(mm)[OV]={[0X00005]=(qZ[0X05]-0X35),[2]=0x00012,[4]=(qZ[4]-53)};end;else local Aq,Vq=nD-wm,(qZ[5]);if Aq<0X0 then Aq=-1;end;for H_=Vq,Vq+Aq do qD[H_]=iD[wm+(H_-Vq)+1];end;WV=Vq+Aq;end;end;end;else if not(aZ>=35)then if not(not(qD[qZ[4]]<=qZ[3]))then else do OV=qZ[5];end;end;else if aZ~=0X000024 then if qD[qZ[4]]==qD[qZ[0X0007]]then else OV=qZ[5];end;else(qD)[qZ[5]]=qD[qZ[4]][qD[qZ[7]]];end;end;end;else do if not(aZ>=0X2b)then if aZ<41 then do repeat local pM,wM,KM=bm,qD,(qZ[5]);if not(#pM>0)then else local rx=({});for fB,CB in d,pM do for Co,go in d,CB do if go[1]==wM and go[0X2]>=KM then local fN=(go[2]);if not rx[fN]then(rx)[fN]={wM[fN]};end;(go)[0X1]=rx[fN];go[0X2]=1;end;end;end;end;until true;end;else if aZ==42 then(qD)[qZ[5]]={l({},1,qZ[4])};else TD[qZ[0X1]]=qD[qZ[0x5]];end;end;else if aZ>=0x02c then if aZ==45 then fD[qZ[0X4]]=qD[qZ[0x05]];else do(qD)[qZ[0X5]]=qD[qZ[0x0004]]+qD[qZ[0X7]];end;end;else if not(qD[qZ[0X4]]<=qD[qZ[0X7]])then OV=qZ[0X5];end;end;end;end;end;end;else if aZ<28 then if aZ<25 then do if aZ~=24 then local rd=qZ[0x05];local Hd,Ad=qD[rd],(qD[rd+1]);local Yd=qD[rd+0X2];do qD[rd]=h(function()for st=Hd,Ad,Yd do m(true,st);end;end);end;OV=qZ[4];else local HX=(qZ[5]);WV=HX+qZ[0X4]-1;qD[HX]=qD[HX](l(qD,HX+1,WV));WV=HX;end;end;else do if aZ>=26 then do if aZ==27 then local UM=dm[qZ[0X004]];local aM=(UM[5]);local qM=(nil);local AM=(#aM);if not(AM>0x0)then else qM={};for k6=1,AM do local i6=aM[k6];if i6[1]==0 then qM[k6-0X00001]={qD,i6[0X2]};else(qM)[k6-0X1]=cm[i6[2]];end;end;V(bm,qM);end;do qD[qZ[5]]=uV(TD,qM,UM);end;else local n7=(qZ[4]);qD[qZ[5]]=qD[n7]..qD[n7+0X001];end;end;else local Bg=(qZ[5]);local Fg,zg=qD[Bg]();if Fg then for qU=0X1,qZ[7]do(qD)[Bg+qU]=zg[qU];end;OV=qZ[4];end;end;end;end;else if not(aZ<0X1f)then do if not(aZ<0X20)then if aZ~=0X21 then local on=(qZ[0X005]);local cn,Zn,mn=qD[on]();do if cn then(qD)[on+0x001]=Zn;qD[on+0X00002]=mn;OV=qZ[4];end;end;else if qZ[0X7]==194 then do OV=OV-0x0001;end;(mm)[OV]={[0X4]=(qZ[4]-0X0a2),[2]=0X003c,[0X0005]=(qZ[0X5]-0X0000a2)};else do if qD[qZ[5]]then do OV=qZ[0X4];end;end;end;end;end;else qD[qZ[5]]=qD[qZ[0x4]]>qD[qZ[7]];end;end;else if aZ>=29 then if aZ~=0X1E then qD[qZ[5]]=false;else local rq=qZ[0X0005];WV=rq+qZ[4]-0x1;qD[rq](l(qD,rq+0X0001,WV));WV=rq-1;end;else(qD)[qZ[5]]=S(qD[qZ[0X4]],qD[qZ[7]]);end;end;end;end;else do if aZ<11 then if not(aZ>=0X5)then if not(aZ<2)then if not(aZ>=3)then do(qD)[qZ[0X005]]=true;end;else do if aZ~=4 then if qD[qZ[0X4]]==qD[qZ[0X7]]then OV=qZ[0X005];end;else(qD)[qZ[0X5]]=qZ[1];end;end;end;else if aZ==1 then do qD[qZ[0X5]][qZ[0X1]]=qZ[3];end;else local x7,d7=qZ[5],(qZ[7]-1)*0X000032;local z7=(qD[x7]);do for DM=0x001,WV-x7 do(z7)[d7+DM]=qD[x7+DM];end;end;end;end;else if aZ<0x8 then do if not(aZ<0X00006)then if aZ~=0x00007 then local Ge=qZ[5];do qD[Ge]=qD[Ge](qD[Ge+0X0001]);end;do WV=Ge;end;else if qZ[7]==0X2D then do OV=OV-1;end;(mm)[OV]={[0X5]=(qZ[5]-252),[2]=0X3c,[4]=(qZ[0X004]-252)};elseif qZ[0X007]==138 then OV=OV-1;do mm[OV]={[4]=(qZ[0X4]-0X00C8),[2]=0x4F,[0X5]=(qZ[5]-0xc8)};end;else qD[qZ[5]]=iD[wm+0X1];end;end;else OV=qZ[0X4];end;end;else do if aZ>=9 then if aZ==10 then if qD[qZ[0X004]]<qD[qZ[0x007]]then OV=qZ[5];end;else qD[qZ[0X005]]=qD[qZ[0X4]]/qD[qZ[7]];end;else do(qD[qZ[0X5]])[qZ[1]]=qD[qZ[7]];end;end;end;end;end;else if not(aZ<0X11)then do if not(aZ>=0x0014)then if not(aZ>=0X0012)then(qD)[qZ[0X005]]=qD[qZ[0X4]]~=qZ[0x0003];else if aZ~=0X13 then if qZ[0X7]==0X55 then OV=OV-1;mm[OV]={[2]=79,[0x4]=(qZ[0X04]-0x4B),[5]=(qZ[0X5]-0X00004B)};elseif qZ[7]~=201 then qD[qZ[0X5]]=-qD[qZ[4]];else OV=OV-0X0001;(mm)[OV]={[2]=0X0003A,[0X5]=(qZ[5]-0X0a9),[4]=(qZ[0X4]-0XA9)};end;else do WV=qZ[5];end;(qD[WV])();WV=WV-1;end;end;else if aZ<21 then if qZ[0x7]==156 then OV=OV-1;do(mm)[OV]={[0X2]=0x3c,[0X4]=(qZ[0X00004]-0X9C),[0X5]=(qZ[0X5]-0X9C)};end;else(qD)[qZ[0X5]]=not qD[qZ[4]];end;else if aZ~=22 then do(qD)[qZ[0x5]]=qD[qZ[0X00004]][qZ[0x3]];end;else(qD)[qZ[0x5]]=kV[qZ[4]];end;end;end;end;else if aZ<0xE then if aZ>=0XC then do if aZ==13 then local bk=qZ[5];local ok=h(function(...)(m)();for kl,gl,el,cl,Cl,vl,dl,Sl,rl,Ul in...do(m)(true,{kl,gl,el,cl,Cl,vl,dl,Sl,rl,Ul});end;end);(ok)(qD[bk],qD[bk+0X1],qD[bk+0X2]);WV=bk;qD[bk]=ok;do OV=qZ[4];end;else do qD[qZ[5]]=T(qD[qZ[0X4]]);end;end;end;else if qD[qZ[4]]~=qZ[3]then else OV=qZ[0x5];end;end;else if not(aZ<15)then if aZ~=16 then local D5=qZ[5];(qD)[D5]=qD[D5](qD[D5+0x1],qD[D5+2]);WV=D5;else if qZ[0x0007]==167 then OV=OV-1;mm[OV]={[5]=(qZ[0X5]-0X0009c),[2]=67,[0X4]=(qZ[4]-156)};else do repeat local YS,VS=bm,(qD);do if#YS>0X0000 then local BI={};do for ln,kn in d,YS do for CR,pR in d,kn do if not(pR[1]==VS and pR[2]>=0X0)then else local Ej=pR[0X0002];do if not BI[Ej]then(BI)[Ej]={VS[Ej]};end;end;do pR[1]=BI[Ej];end;do(pR)[2]=0x1;end;end;end;end;end;end;end;until true;end;local H6=qZ[5];return false,H6,H6+qZ[0X4]-0X0002;end;end;else(qD)[qZ[0X5]]=qD[qZ[4]]*qD[qZ[0X7]];end;end;end;end;end;end;end;until false;end);if KD then do if WD then if yD~=0X1 then return qD[bD](l(qD,bD+1,WV));else return qD[bD]();end;elseif not(bD)then else return l(qD,bD,yD);end;end;else if R(WD)=="string"then if not(g(WD,"attempt to yield across metamethod/C%-call boundary"))then else return coroutine.yield();end;do if g(WD,'^\046\045:%\100+\058 ')then(k)('L\117ra\112\104 Scr\105\112\116\058'..(xm[OV-1]or"(internal)")..": "..I(WD),0X0);else(k)(WD,0);end;end;else k(WD,0);end;end;end;if M then M(Qm,Wm);end;return Qm;end;PV=1;else JV=DV();PV=7;end;end;end;else do if PV<=0 then function DV()local Bg,Ag=nil,(nil);local hg=2;repeat if not(hg<=0)then if hg~=1 then do hg=1;end;else Bg={{},tV,{},tV,tV,{},tV,nil,nil};hg=0X0;end;else do Ag={};end;hg=3;end;until hg==0X3;do hg=0;end;local pg,bg=nil,(nil);do repeat if hg~=0x0 then bg=N();do hg=0x2;end;else pg={};hg=1;end;until hg==2;end;hg=0X1;local Kg=nil;do repeat if not(hg<=0x01)then do if hg==0X00002 then Bg[4]=O();hg=0;else Kg=N()-0X17CAF;hg=0X4;end;end;else if hg==0 then do(Bg)[16]=v();end;do hg=0X3;end;else do for qj=0X1,bg do local vj=(N());local Jj,Mj=nil,nil;for Xb=0x0,0X2 do if Xb<=0 then Jj=N();else do if Xb==0X1 then do Mj=N();end;else for we=vj,Jj do(Bg[3])[we]=Mj;end;end;end;end;end;end;end;hg=2;end;end;until hg>=4;end;local Og=(Bg[0x0006]);hg=0X0;local ig=nil;do repeat if hg==0 then do for hx=1,Kg do(Og)[hx]={[0x1]=v(),[qV]=O(),[0X6]=v(),[XV]=W(),[5]=W(),[0X3]=v(),[4]=W()};end;end;hg=1;else ig=N()-0x12016;do break;end;end;until false;end;local Yg=Bg[1];hg=0x0;local og=(nil);repeat do if hg<=1 then if hg==0X0 then og=QV;do hg=0X3;end;else do Bg[17]=N();end;hg=4;end;else if hg~=0x2 then for jR=0X0000,ig-1 do do(Yg)[jR]=DV();end;end;hg=2;else do(Bg)[2]=O();end;hg=0X1;end;end;end;until hg>0X00003;(Bg)[0Xd]=N();do Bg[0X5]=Ag;end;hg=4;local Fg=nil;while hg~=0x5 do if not(hg<=1)then if hg<=2 then do Bg[8]=O();end;hg=5;else if hg==3 then Fg=v();hg=1;else for dS=1,O()do(Ag)[dS]={v(),O()};end;do hg=3;end;end;end;else do if hg==0 then do(Bg)[0X9]=j(Fg,2,QV)~=0X00;end;hg=2;else(Bg)[7]=j(Fg,0X1,0X1)~=0;do hg=0X0;end;end;end;end;end;do hg=0x3;end;local ng,Ig,Gg,Sg=nil,nil,nil,nil;do while-0X77656A3F do if hg<=3 then if not(hg<=0X001)then if hg~=2 then(Bg)[TV]=N();hg=5;else do Ig=v();end;hg=7;end;else if hg==0X0 then do return Bg;end;else Sg=v()~=KV;hg=0X6;end;end;else do if not(hg<=0x5)then do if hg~=0x6 then Gg={};do hg=0X1;end;else do for bc=1,ng do local Ec=0X1;local ic,Bc=nil,(nil);repeat if Ec==0 then Bc=v();break;else ic=tV;do Ec=0;end;end;until false;Ec=0X0;while true do if Ec~=0 then if Bc==0X56 then do ic=z()+N();end;elseif Bc==0X007 then ic=G();else if Bc==0XE9 then ic=u(rV(Ig),N());else if Bc==0x48 then ic=u(rV(Ig),0X3);elseif Bc==0X0001F then ic=u(rV(Ig),N());else if Bc==229 then ic=u(rV(Ig),z()+N());elseif Bc==0X0023 then ic=EV;elseif Bc==0x26 then do ic=false;end;elseif Bc==0x4D then do ic=z();end;else if Bc==0X000041 then ic=z();end;end;end;end;end;break;else(Gg)[bc-1]=og;Ec=0X01;end;end;local hc=({ic,{}});(pg)[og]=hc;do og=og+1;end;if not(Sg)then else RV[IV]=hc;IV=IV+0X1;end;end;end;hg=4;end;end;else if hg~=4 then ng=N()-cV;hg=2;else for Dr=1,Kg do local ar,Hr=0,nil;do while ar<0X02 do if ar~=0x0000 then for lc,Ic in wV(w)do local pc,Qc,uc=0X00000,nil,nil;do while pc<=2 do if pc<=0 then do Qc=P[Ic];end;do pc=1;end;elseif pc==1 then uc=Hr[Qc];do pc=0X002;end;else do if uc==7 then local xv=1;local sv,rv=nil,nil;repeat if not(xv<=0)then if xv==0X1 then sv=Gg[Hr[Ic]];xv=2;else rv=pg[sv];xv=0;end;else if rv then local Uq=0X02;local Cq=(nil);while(true)do do if not(Uq<=0)then do if Uq~=1 then Hr[Qc]=rv[1];Uq=0;else do Cq[#Cq+1]={Hr,Qc};end;do break;end;end;end;else do Cq=rv[0X2];end;Uq=0x1;end;end;end;end;xv=3;end;until xv>0X2;elseif uc~=0X000a then else Hr[Ic]=Dr+Hr[Ic]+1;end;end;pc=0X3;end;end;end;end;ar=2;else Hr=Bg[0x0006][Dr];ar=0x01;end;end;end;end;hg=0;end;end;end;end;end;end;end;PV=5;else if PV==0X1 then do e=SV;end;PV=0;else RV=tV;do PV=0X0008;end;end;end;end;end;end;end;until false;end;end)(string.byte,0X5,assert,setmetatable,0X000010,error,"",0xe,7,type,0X3,0Xa,"bnot",bit32,coroutine.wrap,string.rep,table,select,ipairs,0X4,8,2,0X06,nil,setfenv,coroutine,true,bit,0X000013,15,string.match,0x0,0xD,getfenv,_ENV,11,0X00B669,0X0001,{3767,1340944699,0X00098Ed4CC4,0x00b6F87429,2200606884,2489544469,998959915,0X0Ba299272,0X7F9Fb5e9},...);