-- This file was generated using Luraph Obfuscator v13.5.6

return(function(yB,UB,YB,EB,SB,eB,tB,vB,xB,fB,pB,XB,mB,ZB,HB,MB,PB,RB,QB,FB,dB,JB,wB,BB,KB,WB,LB,hB,nB,qB,uB,rB,VB,kB,AB,GB,TB,CB,zB,DB,cB,g,...)local a,E,M,j=nil,nil,nil,nil;local o=(select);for SN=0X0,3 do if SN<=1 then if SN~=0X00 then do E=uB.rep;end;else a=EB;end;else if SN~=2 then j=AB;else M=1;end;end;end;local ge,O,l=0X0001,nil,(nil);repeat do if ge==0 then l=kB;break;else O=UB;ge=0;end;end;until false;local k=setmetatable;ge=0X003;local u,S,U,i=nil,nil,nil,(nil);while ge~=0X0004 do if ge<=0x1 then if ge~=0 then U=nB;ge=0X0000;else do i=yB;end;ge=4;end;elseif ge~=0X2 then u=string.gsub;ge=2;else do S={2,0X1,3};end;ge=0X0001;end;end;local J=getfenv;local F=rawset;ge=0x1;local W,A,IB=nil,nil,(nil);do while true do if not(ge<=0)then if ge~=0X1 then IB={};break;else W=coroutine.wrap;do ge=0;end;end;else do A=uB.match;end;ge=0x2;end;end;end;do ge=2;end;local r,T,s,b,t,R,G,K=nil,nil,nil,nil,nil,nil,nil,(nil);while true do if not(ge<=4)then if ge<=0X6 then if ge==5 then do R=(J and J()or TB);end;do ge=0X0;end;else do t=xB;end;ge=5;end;elseif not(ge<=0x7)then if ge~=0X8 then T=FB or dB;do ge=0X08;end;else ge=4;end;else b=string.byte;ge=0X6;end;else if not(ge<=0X1)then if ge<=0X2 then do r=2^0X34;end;ge=0X00009;else if ge==3 then doend;ge=0X001;else do s=WB;end;ge=7;end;end;elseif ge==0X0 then do ge=0X03;end;else do K=0X0080000000;end;break;end;end;end;local Q,p,L,V,P,f,Z=nil,K-tB,nil,nil,nil,nil,(nil);for rG=0X0000,6 do if rG<=2 then do if not(rG<=0)then if rG~=1 then V=function()local jH,mH,WH,fH=b(G,M,M+0X00003);M=M+0X4;do return fH*0x1000000+WH*0X0010000+mH*0X00100+jH;end;end;else do L=function()local UM=b(G,M,M);local QM=0X00001;do repeat if QM==0X00 then do return UM;end;else M=M+1;do QM=0X0000;end;end;until false;end;end;end;end;else G=u(O(G,JB),'..',function(aC)if b(aC,0X02)==72 then local oQ=(0X0000);repeat if oQ==0 then Q=s(O(aC,1,1));do oQ=0X1;end;else return RB;end;until(false);else local wZ=(l(s(aC,16)));if not(Q)then return wZ;else local Hn,xn=0x0,(nil);while 0.6743234378732392 do do if Hn<=0X0 then xn=E(wZ,Q);Hn=2;else if Hn==0X1 then do return xn;end;else Q=MB;Hn=0X001;end;end;end;end;end;end;end);end;end;else do if rG<=4 then do if rG==3 then P=4294967296;else do f=P-1;end;end;end;else do if rG==0X5 then Z={[0x0]=1};else do local UE=(GB);for BW=0X0001,31 do(Z)[BW]=UE;do UE=UE*0X2;end;end;end;end;end;end;end;end;end;local d=(next);local q=function()local hL=(0X0);local fL,HL=nil,(nil);do repeat do if hL<=0 then fL,HL=V(),V();hL=1;else do if hL~=0x001 then return HL*P+fL;else if not(HL>=K)then else HL=HL-P;end;hL=2;end;end;end;end;until false;end;end;local z=function(vo,wo,go)local Yo=(nil);local To=(0x0);repeat if To<=0 then Yo=(vo/Z[wo])%Z[go];To=2;else if To~=1 then do Yo=Yo-Yo%tB;end;do To=0X1;end;else return Yo;end;end;until false;end;ge=0;local e,C,y,X=nil,nil,nil,nil;while ge~=4 do if not(ge<=1)then do if ge==2 then X={[0]={[0]=0X0,1,0X2,0X3,0X04,0x5,0X6,0X7,8,9,0XA,0X0B,PB,13,0xE,0XF},{[0]=0X1,0,3,0x2,0X5,0X004,7,6,0X0009,8,0Xb,10,13,0x000c,0xF,14},{[0X00]=0X2,rB,0X0000,0X00001,6,0x007,fB,0X5,0X00a,11,pB,0X9,14,0X0000F,PB,0x0D},{[0]=rB,2,0x1,0X0,0X7,0X6,0X5,0x004,0Xb,ZB,9,8,zB,0X0000E,13,PB},{[0]=4,0X00005,0X6,7,0,0X1,2,0X00003,0XC,13,0X00e,0xf,pB,9,0X0000A,0xb},{[0]=0X5,0X4,7,6,0X001,0,3,2,0Xd,12,0XF,0XE,0X9,0X8,VB,0Xa},{[0]=6,0X07,0X4,0X5,2,3,0X00,1,14,0X0000F,0Xc,0Xd,ZB,11,8,9},{[0X0]=7,6,0x5,4,3,2,tB,0,zB,qB,0x000D,0x000C,11,ZB,0X9,pB},{[0]=0X00008,0X00009,10,0X00B,0Xc,0X000D,0xe,0xf,0x0,1,2,0X0003,0X004,5,6,7},{[0]=9,0X8,VB,10,13,0Xc,0X000F,qB,tB,0X0,0x3,2,0X5,0X00004,0X7,6},{[0]=10,0XB,8,9,0XE,0Xf,12,0X000d,2,0X3,CB,0X1,6,7,0X0004,5},{[0X00]=11,0XA,XB,0x0008,15,14,0xd,0xC,0X00003,2,1,0x000,0X7,6,JB,0X0004},{[CB]=0X0c,13,14,15,0X8,0x9,0X0a,0Xb,4,0x00005,6,7,0x0,tB,0X2,3},{[CB]=0Xd,12,0Xf,0X0000e,9,8,11,10,5,4,7,6,1,0X0,3,GB},{[0X0]=14,15,0Xc,eB,10,0X000b,0X00008,0X0009,6,7,0X4,0X5,2,3,0x0,1},{[0X0000]=0Xf,qB,13,PB,0X00B,10,0X9,8,0X0007,0X6,JB,4,3,2,1,0X0}};ge=0x04;else do y=KB;end;do ge=0X2;end;end;end;elseif ge~=0 then C=function()local yz,hz,Oz=nil,nil,nil;do for Ug=0,3 do do if Ug<=0X1 then if Ug==0x0 then yz=V();else hz=V();end;else if Ug==0X002 then Oz=tB;else if yz==0X0 and hz==0 then do return 0X00000;end;end;end;end;end;end;end;local wz=((-1)^z(hz,0X01f,0X1));local fz=(z(hz,0x14,VB));local vz=z(hz,0,20)*P+yz;local lz=0X0000;repeat if lz==0 then do if fz==0 then if vz~=0X00000 then for XF=0X0,1 do if XF==0 then do fz=0X1;end;else Oz=0X0;end;end;else do return wz*0X00000;end;end;elseif fz~=2047 then else if vz~=0 then do return wz*(0x0001/0x0);end;else return wz*(0X00/0X0);end;end;end;lz=0X1;else return wz*(2^(fz-0X003FF))*(vz/r+Oz);end;until(false);end;ge=0x03;else e=(QB or LB);ge=1;end;end;local Y,NB=e and e[YB]or function(Xz,ez)Xz=Xz%P;local Tz,Gz,Lz=1,1,(nil);do while 0x0245E0DE5 do if Gz<=1 then if Gz~=0 then ez=ez%P;Gz=0;else Lz=0;do Gz=0X002;end;end;else do if Gz==0x02 then do while Xz>0X0 and ez>0X00000 do local jU=(ez%0X0010);local XU=Xz%16;do Lz=Lz+X[XU][jU]*Tz;end;local bU=(0);do repeat if bU<=0x0 then Xz=(Xz-XU)/0x10;do bU=1;end;else if bU==0x1 then do ez=(ez-jU)/0X0010;end;bU=2;else Tz=Tz*0x10;do bU=0X003;end;end;end;until bU>0X2;end;end;end;Gz=3;else return Lz+Xz*Tz+ez*Tz;end;end;end;end;end;end,({});local h=(e and e[hB]or function(tG,MG)local OG=(0X1);while 0.22517366053874044 do do if not(OG<=0)then if OG==0x1 then tG=tG%P;OG=0x2;else do MG=MG%P;end;OG=0;end;else return((tG+MG)-Y(tG,MG))/0X2;end;end;end;end);local v=(e and e[vB]or function(Et,It)local et=0X2;do repeat if et<=0X0 then It=It%P;do et=1;end;else if et~=1 then Et=Et%P;et=0X0;else return f-h(f-Et,f-It);end;end;until false;end;end);local H,B,N,m,x=e and e[HB]or function(AQ)do return f-(AQ%P);end;end,e and e[BB],mB,e and e.rshift,SB;B=B or function(Jy,My)do if My>=0X000020 then return 0X00;end;end;local Py=0x1;while true do if Py~=0X0 then if not(My<0)then else return m(Jy,-My);end;do Py=0X0;end;else return(Jy*Z[My])%P;end;end;end;local I=type;m=m or function(Mx,lx)if not(lx>=32)then else return 0;end;if not(lx<CB)then else return B(Mx,-lx);end;local mx=((Mx%P/Z[lx]));return mx-mx%0X1;end;local D=(function()local yc,Yc=0,0;while 1865980483 do local oT=b(G,M,M);M=M+1;yc=v(yc,B(h(oT,0X0007f),Yc));do if h(oT,128)~=0 then else return yc;end;end;Yc=Yc+0X7;end;end);local w={[0X5]=1,[0X02]=7,[3]=0X0004,[0X0]=0X3,[9]=0X3,[0x1]=5,[0X7]=1,[0X00]=0X5,[6]=7,[0]=0X4,[7]=0X8};local c=function()local J3=nil;for k0=0X00000,0x2 do do if k0<=0X0 then J3=D();else if k0~=1 then return J3;else if not(J3>p)then else return J3-P;end;end;end;end;end;end;local gB=(L());local iB=L();local oB=(function(K5)local g5=({b(G,M,M+0X3)});local a5=(Y(g5[0X01],iB));local T5,r5=nil,nil;for P_=0,1 do do if P_~=0X0 then r5=Y(g5[3],iB);else do T5=Y(g5[GB],iB);end;end;end;end;local x5=0X0003;local c5=nil;while true do if not(x5<=0X00001)then if x5~=2 then c5=Y(g5[0X4],iB);x5=0X0000;else do return c5*16777216+r5*0X000010000+T5*wB+a5;end;end;else if x5==0X0 then iB=(189*iB+K5)%0x000100;x5=1;else M=M+0X4;x5=0X2;end;end;end;end);local aB=(function(...)return o('\035',...),{...};end);ge=0x0002;local jB,sB,OB,bB,lB=nil,nil,nil,nil,(nil);while"\088N\093\120!["do if not(ge<=3)then if not(ge<=5)then if not(ge<=6)then if ge==7 then do NB[1]=IB;end;do ge=0x03;end;else sB=function(uH)local SH=V();local ZH="";for Z_=0X0,0X2 do do if Z_<=0X0 then for oA=1,SH,7997 do local aA,zA,dA=0X2,nil,(nil);do while aA<=0X2 do if aA<=0x0 then dA={b(G,M+oA-0X00001,M+zA-0x1)};aA=0X3;else do if aA~=0X1 then zA=oA+0x1f3D-1;aA=1;else do if not(zA>SH)then else zA=SH;end;end;aA=0X0000;end;end;end;end;end;aA=0X00;do while aA<2 do if aA~=0X0 then do ZH=ZH..l(T(dA));end;do aA=0X00002;end;else do for HF=1,#dA do do dA[HF]=Y(dA[HF],gB);end;gB=(uH*gB+171)%256;end;end;aA=0X0001;end;end;end;end;else do if Z_==0x00001 then do M=M+SH;end;else return ZH;end;end;end;end;end;end;ge=0X000;end;else function bB()local W8,I8,i8,j8,k8,d8=4,nil,nil,nil,nil,(nil);while W8<=9 do if not(W8<=4)then do if W8<=6 then do if W8==0x5 then for tG=tB,D()do do d8[tG]={L(),D()};end;end;W8=1;else(i8)[0X0002]=D();W8=0xA;end;end;else if W8<=0X7 then do for Jd=0X1,k8 do local Sd,Yd,ad=nil,nil,(nil);for YL=0,2 do do if not(YL<=0X00)then if YL==0X1 then do Yd=V();end;else ad=V();end;else Sd=V();end;end;end;for tS=Sd,Yd do(i8[3])[tS]=ad;end;end;end;W8=0X2;else if W8~=8 then i8={{},MB,{},MB,nil,{},MB,nil,MB};W8=0;else k8=V();do W8=0X7;end;end;end;end;end;else if W8<=0X001 then do if W8~=0 then do(i8)[0X013]=L();end;W8=0X6;else j8=0X1;W8=8;end;end;else do if not(W8<=0X002)then do if W8~=3 then I8={};W8=0X9;else i8[JB]=d8;W8=0X5;end;end;else d8={};W8=3;end;end;end;end;end;W8=1;local z8=nil;while W8<2 do if W8==0X0 then z8=V()-8537;W8=2;else i8[0Xb]=V();W8=0x0;end;end;local b8=(i8[DB]);for O0=0X1,z8 do(b8)[O0]={[DB]=D(),[2]=c(),[4]=L(),[5]=L(),[7]=L(),[tB]=c(),[3]=c()};end;local p8=i8[1];W8=1;local t8=nil;while W8<0X2 do do if W8==0 then for VA=0,t8-tB do p8[VA]=bB();end;W8=2;else t8=V()-0X00FdE3;do W8=0;end;end;end;end;local G8=(V()-3057);local H8=L();local T8,u8=nil,(nil);do for si=0,1 do if si==0X00 then do T8={};end;else do u8=L()~=0X00;end;end;end;end;do for Pl=0X1,G8 do local jl=6;local Zl,wl,Rl=nil,nil,nil;do while(true)do do if not(jl<=3)then do if not(jl<=0x5)then if jl~=0X6 then I8[Pl-1]=j8;jl=5;else do Zl=L();end;jl=3;end;else if jl==4 then(T8)[j8]=Rl;jl=1;else do if Zl==238 then do wl=O(sB(H8),0X014);end;elseif Zl==0X0002E then do wl=cB;end;elseif Zl==140 then do wl=C()+V();end;elseif Zl==31 then wl=C();elseif Zl==0Xb5 then wl=C();elseif Zl==0X90 then do wl=O(sB(H8),0X003);end;elseif Zl==0X002 then wl=O(sB(H8),V());elseif Zl==175 then do wl=q();end;elseif Zl==0X4B then wl=true;elseif Zl==205 then do wl=V();end;elseif Zl==162 then do wl=q();end;end;end;do jl=2;end;end;end;end;else do if not(jl<=0X001)then if jl==0X2 then do Rl={wl,{}};end;jl=4;else wl=nil;jl=0X7;end;else if jl~=0x000 then j8=j8+0X01;do jl=0;end;else if u8 then local F8=0;repeat if F8~=0X0 then jB=jB+1;break;else IB[jB]=Rl;F8=0x00001;end;until(false);end;break;end;end;end;end;end;end;end;end;end;for K1=1,z8 do local Y1,O1=0,(nil);while Y1~=0x2 do if Y1==0 then do O1=i8[0X6][K1];end;do Y1=0X1;end;else for GC,pC in ipairs(S)do local aC,SC,zC=1,nil,(nil);while(true)do if aC<=0 then if zC==14 then local Be=(1);local Ee,Fe=nil,nil;while Be<=0X00002 do if not(Be<=0)then if Be~=1 then Fe=T8[Ee];Be=0X00;else Ee=I8[O1[pC]];Be=2;end;else if Fe then local QN=(nil);do for Gd=0X0,0X0002 do if Gd<=0 then(O1)[SC]=Fe[0x0001];else if Gd~=0X1 then(QN)[#QN+1]={O1,SC};else QN=Fe[2];end;end;end;end;end;Be=3;end;end;elseif zC~=5 then else O1[pC]=K1+O1[pC]+0X1;end;break;else if aC~=0x001 then zC=O1[SC];aC=0X00;else SC=w[pC];aC=2;end;end;end;end;Y1=0X2;end;end;end;(i8)[0x000D]=L();W8=7;local n8=(nil);do while(true)do if not(W8<=3)then if not(W8<=0X005)then if W8<=6 then(i8)[0X0009]=z(n8,2,0x1)~=0;W8=2;else if W8==7 then i8[14]=L();W8=3;else(i8)[0XA]=V();W8=1;end;end;else do if W8==4 then(i8)[0X8]=D();W8=0;else(i8)[0x7]=z(n8,tB,0x1)~=0;do W8=6;end;end;end;end;else if W8<=1 then if W8~=0x000 then return i8;else do i8[VB]=L();end;W8=0X00008;end;else do if W8==2 then(i8)[4]=D();W8=0X4;else n8=L();do W8=0X05;end;end;end;end;end;end;end;end;ge=0x0004;end;elseif ge==4 then lB=bB();ge=7;else do return OB(R,lB,MB)(...);end;end;else if ge<=0x0001 then if ge~=0 then function OB(pT,BT,WT)local zT=(BT[4]);local YT,fT=BT[0X8],BT[3];local HT,mT=BT[0x7],(BT[0X0009]);local PT=(BT[1]);local eT=(BT[0X6]);local tT=(k({},{__mode="v"}));local FT,gT=BT[0X0002],(nil);gT=function(...)local ML=(0);local YL,kL=1,{};local SL=((J and J()or _ENV));local xL=({[0x00002]=kL,[1]=BT});local aL,WL=aB(...);local IL=(SL==R and pT or SL);aL=aL-1;do for k1=0X0000,aL do if zT>k1 then(kL)[k1]=WL[k1+0x1];else break;end;end;end;if not HT then do WL=nil;end;elseif not(mT)then else do(kL)[zT]={n=aL>=zT and aL-zT+1 or 0,T(WL,zT+1,aL+1)};end;end;if IL~=SL then do if t then t(gT,IL);else do _ENV=IL;end;end;end;end;local DL,eL,nL,hL=a(function()while true do local mD=(eT[YL]);local PD=mD[0X6];YL=YL+0X1;if PD>=46 then if PD<69 then if PD<57 then if not(PD<0X033)then if not(PD<54)then if PD>=55 then do if PD==56 then local Tj=mD[1];for Od=Tj,Tj+(mD[0X3]-1)do do(kL)[Od]=WL[zT+(Od-Tj)+1];end;end;else kL[mD[0X01]]=kL[mD[3]]~=mD[0x00007];end;end;else if kL[mD[0X3]]<kL[mD[0X2]]then YL=mD[0X00001];end;end;else do if PD>=52 then do if PD==0x35 then if not kL[mD[0x01]]then YL=mD[0X3];end;else(kL)[mD[1]]=v(kL[mD[3]],kL[mD[0X0002]]);end;end;else(kL)[mD[1]]={T({},0x1,mD[3])};end;end;end;else if not(PD>=48)then if PD==0x2f then local bT=(mD[1]);local RT=(mD[3]);ML=bT+RT-0X1;repeat local hf,bf=tT,kL;if#hf>0X0 then local ZT=({});for X8,s8 in d,hf do for GT,IT in d,s8 do do if not(IT[0X1]==bf and IT[0X02]>=0)then else local FC=(IT[0X002]);if not(not ZT[FC])then else(ZT)[FC]={bf[FC]};end;(IT)[1]=ZT[FC];IT[2]=0X1;end;end;end;end;end;until true;return true,bT,RT;else if not(not(kL[mD[0X3]]<=kL[mD[2]]))then else YL=mD[0X001];end;end;else if not(PD>=49)then local Bz=mD[1];ML=Bz+mD[0X00003]-1;(kL)[Bz]=kL[Bz](T(kL,Bz+0X01,ML));do ML=Bz;end;else if PD~=50 then local MF=(mD[0X1]);local yF=W(function(...)x();for PY in...do(x)(true,PY);end;end);(yF)(kL[MF],kL[MF+1],kL[MF+0X02]);ML=MF;kL[MF]=yF;YL=mD[0x3];else local fG,pG=mD[1],kL[mD[0X3]];(kL)[fG+0X1]=pG;kL[fG]=pG[mD[0x7]];end;end;end;end;else do if PD<0x3f then if not(PD>=0X03C)then do if PD>=58 then if PD~=59 then if kL[mD[0X3]]==kL[mD[2]]then YL=mD[0x1];end;else kL[mD[0x1]]=false;end;else(kL)[mD[0X1]]=m(kL[mD[3]],kL[mD[0X2]]);end;end;else if PD>=0X00003D then do if PD==62 then if mD[0X00002]==164 then YL=YL-1;eT[YL]={[6]=64,[3]=(mD[3]-0X1D),[1]=(mD[1]-29)};else repeat local Pw,gw,rw=tT,kL,(mD[1]);do if not(#Pw>0x000)then else local hY=({});for sm,cm in d,Pw do do for nR,NR in d,cm do if NR[0x01]==gw and NR[0X2]>=rw then local Nw=NR[2];if not(not hY[Nw])then else do(hY)[Nw]={gw[Nw]};end;end;(NR)[0X01]=hY[Nw];NR[2]=0X001;end;end;end;end;end;end;until true;end;else(kL)[mD[0X01]]=kL[mD[3]];end;end;else(kL)[mD[0X1]]=kL[mD[3]]+kL[mD[2]];end;end;else if not(PD<0X42)then if not(PD<67)then if PD==0X44 then if mD[0X2]==0X0A7 then YL=YL-1;(eT)[YL]={[6]=0X40,[3]=(mD[3]-130),[0x1]=(mD[1]-130)};else local vn=(aL-zT);local Gn=mD[0X1];if vn<0 then vn=-1;end;do for PS=Gn,Gn+vn do kL[PS]=WL[zT+(PS-Gn)+1];end;end;ML=Gn+vn;end;else kL[mD[1]]=kL[mD[0X003]]*kL[mD[0X2]];end;else(xL)[mD[0X3]]=kL[mD[1]];end;else if PD<0X000040 then local Yx=mD[1];local gx,fx=kL[Yx]();if gx then for l2=0x1,mD[2]do kL[Yx+l2]=fx[l2];end;YL=mD[0x3];end;else if PD==65 then(IL)[mD[4]]=kL[mD[0x1]];else if mD[2]==82 then do YL=YL-1;end;do(eT)[YL]={[0X1]=(mD[1]-178),[6]=0X0001d,[0X3]=(mD[0X3]-0XB2)};end;elseif mD[0X2]~=94 then do kL[mD[0X1]]=#kL[mD[3]];end;else YL=YL-1;(eT)[YL]={[1]=(mD[0X1]-0X00Ec),[0X6]=0X000044,[0X3]=(mD[0x3]-236)};end;end;end;end;end;end;end;else if not(PD>=80)then do if not(PD<74)then do if PD<0x4D then do if PD<0X4b then local Gr=(mD[0X3]);do(kL)[mD[0X1]]=kL[Gr]..kL[Gr+1];end;else if PD==0X4C then local Gt=mD[0X001];do ML=Gt+mD[3]-0X01;end;kL[Gt](T(kL,Gt+1,ML));ML=Gt-1;else do repeat local HH,GH=tT,kL;if not(#HH>0)then else local z9=({});do for GY,CY in d,HH do for ze,ie in d,CY do if ie[0X0001]==GH and ie[0X2]>=0 then local zi=(ie[2]);if not(not z9[zi])then else(z9)[zi]={GH[zi]};end;ie[0x001]=z9[zi];(ie)[2]=0X00001;end;end;end;end;end;until true;end;local B2=(mD[0X0001]);do return false,B2,B2+mD[3]-0X2;end;end;end;end;else if PD<0X0004e then local cA=mD[0X1];local aA,KA=kL[cA]();do if aA then do kL[cA+0X1]=KA;end;YL=mD[0X3];end;end;else if PD~=79 then kL[mD[0x0001]]=h(kL[mD[3]],kL[mD[0X02]]);else ML=mD[1];(kL[ML])();do ML=ML-0X0001;end;end;end;end;end;else do if PD<71 then do if PD==0X46 then local qk=mD[0X01];local sk=W(function(...)x();for Ex,Wx,mx,Fx,zx,kx,Ax,Xx,xx,Sx in...do x(true,{Ex,Wx,mx,Fx,zx,kx,Ax,Xx,xx,Sx});end;end);(sk)(kL[qk],kL[qk+1],kL[qk+2]);ML=qk;kL[qk]=sk;YL=mD[0X0003];else do kL[mD[1]]=kL[mD[0X3]]>=kL[mD[2]];end;end;end;else if PD<72 then local u4=mD[0X1];kL[u4]=kL[u4](kL[u4+1],kL[u4+2]);ML=u4;else do if PD==0X49 then if kL[mD[0X00003]]~=kL[mD[0x2]]then YL=mD[0X1];end;else if not(kL[mD[0x00003]]<kL[mD[2]])then YL=mD[1];end;end;end;end;end;end;end;end;else do if not(PD>=86)then if PD<0x53 then do if PD<0X51 then ML=mD[1];(kL)[ML]=kL[ML]();else if PD==82 then kL[mD[0X001]]=H(kL[mD[0X3]]);else local v5=(mD[0X1]);(kL)[v5]=kL[v5](kL[v5+1]);ML=v5;end;end;end;else do if PD>=84 then do if PD==85 then local T7=(mD[1]);local t7=W(function(...)x();for n2,h2 in...do(x)(true,n2,h2);end;end);t7(kL[T7],kL[T7+0X1],kL[T7+0X002]);do ML=T7;end;(kL)[T7]=t7;YL=mD[0X003];else(kL)[mD[0X0001]]=Y(kL[mD[3]],kL[mD[0X2]]);end;end;else kL[mD[1]]=kL[mD[0X0003]]<=kL[mD[0X2]];end;end;end;else if PD>=0X59 then if not(PD>=0X5A)then local Bm=(mD[0X1]);local em=(kL[Bm+0X02]);local wm,Km=kL[Bm],(kL[Bm+1]);(kL)[Bm]=W(function()for B9=wm,Km,em do x(true,B9);end;end);YL=mD[0X3];else if PD==0X00005b then local AF=mD[1];local iF,BF=kL[AF]();if not(iF)then else do YL=mD[3];end;kL[AF+3]=BF;end;else do kL[mD[0x1]]=B(kL[mD[3]],kL[mD[2]]);end;end;end;else if PD>=0x57 then if PD==88 then do(kL)[mD[0x1]]=xL[mD[3]];end;else(kL[mD[1]])[kL[mD[3]]]=mD[0x007];end;else local JP=(mD[0x0001]);kL[JP](kL[JP+0X00001]);ML=JP-0X1;end;end;end;end;end;end;else do if not(PD<0X17)then if not(PD>=0X22)then if PD<28 then do if not(PD>=0X19)then if PD==0X00018 then if kL[mD[3]]~=mD[7]then else YL=mD[1];end;else(kL[mD[0X00001]])[mD[4]]=kL[mD[0x2]];end;else if PD<0X01a then local E4=(WT[mD[3]]);(E4[1])[E4[0X00002]]=kL[mD[1]];else if PD~=0x1b then if mD[2]==206 then YL=YL-1;(eT)[YL]={[0X06]=44,[0X003]=(mD[0X3]-0X00E),[0X1]=(mD[1]-0x0000E)};else do kL[mD[0X1]]=-kL[mD[3]];end;end;else kL[mD[0x001]]=true;end;end;end;end;else if not(PD>=31)then if PD>=29 then if PD==30 then do(kL)[mD[0x001]]=IL[mD[0X004]];end;else if mD[0X2]==22 then YL=YL-1;(eT)[YL]={[0X6]=3,[0X3]=(mD[3]-112),[0X1]=(mD[1]-0X00070)};elseif mD[2]~=0x00f then do for PN=mD[0X1],mD[0X3]do kL[PN]=nil;end;end;else do YL=YL-1;end;(eT)[YL]={[0X3]=(mD[0X03]-0X008),[0x1]=(mD[0X1]-8),[6]=0X3};end;end;else kL[mD[0X1]]=kL[mD[3]]/kL[mD[0X2]];end;else if not(PD<32)then do if PD~=0X21 then YL=mD[3];else kL[mD[0X001]]=kL[mD[3]]^kL[mD[0X2]];end;end;else if kL[mD[0x3]]<=kL[mD[0X00002]]then do YL=mD[1];end;end;end;end;end;else if PD<40 then do if not(PD<37)then do if not(PD>=0X26)then(kL)[mD[1]]=mD[4];else do if PD~=39 then local Wy=mD[1];(kL[Wy])(T(kL,Wy+1,ML));ML=Wy-0x01;else local Zf,sf=mD[0x1],(mD[3]);do if sf~=0X0 then ML=Zf+sf-0x1;end;end;local Lf=(mD[2]);local ef,Rf=nil,(nil);if sf~=0x00001 then do ef,Rf=aB(kL[Zf](T(kL,Zf+0X1,ML)));end;else ef,Rf=aB(kL[Zf]());end;if Lf~=0x01 then if Lf~=0 then ef=Zf+Lf-2;ML=ef+1;else ef=ef+Zf-1;do ML=ef;end;end;local qh=(0x0);for LM=Zf,ef do qh=qh+0X0001;(kL)[LM]=Rf[qh];end;else ML=Zf-0x0001;end;end;end;end;end;else if PD>=0x23 then if PD==0X24 then kL[mD[0x1]]=kL[mD[3]]%mD[7];else local vo=(mD[1]);(kL[vo])(kL[vo+1],kL[vo+0X2]);do ML=vo-0X01;end;end;else NB[mD[0X03]]=kL[mD[1]];end;end;end;else if not(PD>=0X0002b)then if PD<41 then do(kL)[mD[0X1]]={};end;else do if PD~=42 then local ix=mD[1];local ox,Lx=kL[ix],(mD[2]-0x00001)*0X032;for gf=0X1,mD[0X3]do do ox[Lx+gf]=kL[ix+gf];end;end;else repeat local cD,KD=tT,(kL);if#cD>0 then local cx={};for qJ,aJ in d,cD do for kr,Tr in d,aJ do if Tr[1]==KD and Tr[2]>=0x0 then local wR=Tr[0x2];do if not(not cx[wR])then else cx[wR]={KD[wR]};end;end;(Tr)[1]=cx[wR];Tr[0X2]=0X1;end;end;end;end;until true;return true,mD[1],0X0;end;end;end;else if not(PD<0X2C)then if PD~=0X2D then if mD[2]==119 then YL=YL-0x1;eT[YL]={[1]=(mD[0X1]-0XaD),[0x0003]=(mD[3]-173),[0X6]=0X1A};else kL[mD[0x1]]=nil;end;else kL[mD[1]]=kL[mD[0X003]][mD[7]];end;else kL[mD[0x01]]=mD[0X4];end;end;end;end;else if not(PD>=0Xb)then if not(PD>=0X00005)then if not(PD>=2)then if PD~=0X1 then(kL)[mD[1]]=kL[mD[0X003]]>kL[mD[2]];else do kL[mD[0X1]]=kL[mD[3]]%kL[mD[2]];end;end;else if not(PD<0X03)then if PD~=4 then if mD[0X02]==0X0071 then do YL=YL-1;end;do(eT)[YL]={[3]=(mD[0X3]-210),[0x6]=0X0004B,[1]=(mD[1]-0xD2)};end;elseif mD[0X2]==25 then YL=YL-1;(eT)[YL]={[0x1]=(mD[0X1]-0X0035),[0X06]=68,[3]=(mD[0X3]-0x0035)};else repeat local AJ,ZJ=tT,kL;if#AJ>0 then local kQ={};for fH,oH in d,AJ do for UU,TU in d,oH do if TU[0X00001]==ZJ and TU[0X2]>=0X0000 then local x5=(TU[2]);if not kQ[x5]then(kQ)[x5]={ZJ[x5]};end;TU[1]=kQ[x5];(TU)[2]=1;end;end;end;end;until true;do return false,mD[0X1],ML;end;end;else(kL)[mD[1]]=kL[mD[3]]~=kL[mD[2]];end;else if kL[mD[3]]~=mD[0X7]then YL=mD[1];end;end;end;else if not(PD>=0X8)then if not(PD>=6)then do kL[mD[0X01]][kL[mD[0x3]]]=kL[mD[2]];end;else if PD==7 then do kL[mD[0X1]]=kL[mD[0X3]]<kL[mD[0X2]];end;else local wu=(mD[3]);local iu=(kL[wu]);for qV=wu+0X0001,mD[0X002]do iu=iu..kL[qV];end;kL[mD[1]]=iu;end;end;else if not(PD>=0x9)then kL[mD[0X1]]=NB[mD[0X003]];else do if PD==0X000a then(kL)[mD[0X1]]=kL[mD[3]][kL[mD[2]]];else local Sy=WT[mD[3]];do(kL)[mD[0X1]]=Sy[0x1][Sy[0x2]];end;end;end;end;end;end;else if not(PD>=17)then if PD<0xE then do if PD<0X000C then do repeat local Gb,Ub=tT,(kL);do if not(#Gb>0x00)then else local su=({});for GT,AT in d,Gb do for NL,lL in d,AT do if lL[1]==Ub and lL[2]>=0X00000 then local Sq=lL[2];do if not(not su[Sq])then else su[Sq]={Ub[Sq]};end;end;lL[1]=su[Sq];lL[0X0002]=0X1;end;end;end;end;end;until true;end;return true,mD[1],0X1;else if PD~=13 then(kL[mD[1]])[mD[0X004]]=mD[7];else local m4=(mD[0X1]);local B4,g4=kL[m4],((mD[2]-0X1)*50);for bc=1,ML-m4 do B4[g4+bc]=kL[m4+bc];end;end;end;end;else if not(PD>=0Xf)then(kL)[mD[0X1]]=kL[mD[3]]-kL[mD[0X2]];else if PD==16 then local zk=(mD[0X1]);kL[zk]=kL[zk](T(kL,zk+1,ML));do ML=zk;end;else do repeat local PR,oR=tT,kL;if#PR>0X000 then local ny=({});for kg,lg in d,PR do for f3,D3 in d,lg do if D3[0X1]==oR and D3[0X00002]>=0X0 then local IA=(D3[2]);do if not ny[IA]then ny[IA]={oR[IA]};end;end;(D3)[1]=ny[IA];do D3[2]=1;end;end;end;end;end;until true;end;return;end;end;end;else if PD>=20 then if PD<0X15 then local Uy=(mD[0X1]);local Yy,Ky,Dy=kL[Uy]();do if not(Yy)then else kL[Uy+0X001]=Ky;(kL)[Uy+2]=Dy;do YL=mD[0x00003];end;end;end;else if PD~=0x16 then do if not(kL[mD[3]]<=mD[0X7])then YL=mD[1];end;end;else do(kL)[mD[1]]=not kL[mD[0X00003]];end;end;end;else if PD>=0X000012 then if PD~=0X0013 then local Hr=nil;local Yr=PT[mD[0X0003]];local Mr=(Yr[0X5]);local Sr=#Mr;do if not(Sr>0)then else do Hr={};end;for Mq=1,Sr do local Bq=(Mr[Mq]);if Bq[0x0001]~=0X0 then do Hr[Mq-1]=WT[Bq[2]];end;else(Hr)[Mq-1]={kL,Bq[2]};end;end;U(tT,Hr);end;end;kL[mD[1]]=OB(IL,Yr,Hr);else if mD[0X02]~=201 then if not(kL[mD[0X1]])then else do YL=mD[3];end;end;else YL=YL-0X01;(eT)[YL]={[3]=(mD[3]-200),[0X1]=(mD[0X1]-0Xc8),[0X6]=44};end;end;else kL[mD[0X1]]=kL[mD[0X0003]]==kL[mD[2]];end;end;end;end;end;end;end;end;end);if not(DL)then if I(eL)=='s\116r\105ng'then if not(A(eL,"attempt to yield across metamethod/C%-call boundary"))then else return coroutine.yield();end;if A(eL,"^.-:%d+: ")then(N)('\076\117r\097p\104 \083\099\114i\112t\058'..(fT[YL-1]or"\040\105n\116er\110al)")..': '..j(eL),0X0);else(N)(eL,0X000);end;else N(eL,0X00);end;else if eL then if hL==0X001 then return kL[nL]();else do return kL[nL](T(kL,nL+1,ML));end;end;elseif not(nL)then else return T(kL,nL,hL);end;end;end;if not(t)then else t(gT,pT);end;return gT;end;ge=0X00006;else ge=0X1;end;else if ge~=0X2 then IB=nil;ge=5;else do jB=1;end;ge=0X08;end;end;end;end;end)(assert,string.sub,"\098\120o\114",pcall,coroutine.yield,13,1,"\098\111r",setfenv,0X0004,0x8,0X9,error,10,"\098n\111t",nil,0xc,'',bit,unpack,table.unpack,0X00005,0x100,"\108s\104i\102\116",rawget,tonumber,bit32,"\098an\100",table.insert,0Xe,string,3,11,string.char,tostring,0x2,_ENV,0,15,0X6,false,{35479,0X16Db5378,0xFCfDB6A9,0x0000E7B79FD6,1963988948,0x36f1858a,0X6a5d2Fc9,4292724787,1974448003},...);