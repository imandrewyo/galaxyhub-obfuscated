-- This file was generated using Luraph Obfuscator v13.5.6

do return(function(WW,xW,GW,gW,OW,UW,lW,bW,HW,FW,PW,LW,wW,IW,XW,jW,RW,dW,nW,oW,zW,CW,iW,cW,kP,NW,pW,uW,yW,qW,hW,JW,KW,BW,ZW,DW,QW,MW,AW,vW,aW,tW,k,...)local S=select;local y=((bit or pW));local V,m=nil,(nil);do for Ew=0,0X1 do if Ew==0 then V=LW;else do m=jW;end;end;end;end;local s,E,a,eP,f,T,L=tostring,cW,1,0x0,nil,nil,(nil);do repeat if eP<=0 then f=XW;eP=1;else if eP==0X00001 then T=FW;eP=0x2;else L=iW;do eP=3;end;end;end;until eP>=3;end;local c,F=WW,rawget;eP=0x2;local j,r,i,J,l=nil,nil,nil,nil,nil;repeat if eP<=0X001 then if eP~=0 then J=dW or table.unpack;eP=4;else r=lW;eP=0X3;end;elseif not(eP<=2)then if eP~=0X3 then l=qW;eP=5;else i=JW;eP=0x00001;end;else j=xW;eP=0;end;until eP>4;eP=3;local U,x,q,G,B,A,p,R,w,t,I,v=nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil;repeat do if not(eP<=6)then if eP<=10 then do if not(eP<=0x8)then if eP==9 then do G=(q and q()or AW);end;do eP=7;end;else A=L(E(A,tW),".\046",function(Sm)do if V(Sm,2)==72 then do R=f(E(Sm,0X1,0x00001));end;return"";else local tY=(T(f(Sm,bW)));if R then local r0=p(tY,R);R=IW;return r0;else return tY;end;end;end;end);do eP=0XD;end;end;else if eP~=0X7 then x=GW;eP=0;else eP=0XB;end;end;end;else if eP<=0XC then if eP==0xb then B={[0]=0X1};eP=0x5;else eP=10;end;else if eP==0X00D then do w=U-0X1;end;eP=14;else t=function()local VK,oK=0,nil;do while(true)do if not(VK<=0X0)then do if VK==1 then do a=a+UW;end;VK=0X2;else return oK;end;end;else do oK=V(A,a,a);end;VK=1;end;end;end;end;do eP=6;end;end;end;end;else if eP<=2 then do if eP<=0X000 then q=aW;eP=9;else do if eP==1 then v=0X2^0X034;eP=15;else U=0X100000000;do eP=0X8;end;end;end;end;end;else if not(eP<=4)then if eP~=5 then I=2147483648;eP=1;elseeP=0x00004;end;else if eP==0X3 then eP=2;else p=RW;eP=12;end;end;end;end;end;until eP>=0Xf;local Z={[0X0]={[0x0]=0x00,1,0X02,0X3,4,5,6,0X7,0X00008,9,vW,0XB,12,wW,KW,0XF},{[0]=1,0X0,0X003,0X002,0X00005,0X04,0x7,0X00006,9,8,11,vW,13,12,0XF,14},{[0X0]=0x002,BW,0X0,0X1,0X006,7,4,5,10,0X00B,8,0X9,14,0XF,12,0XD},{[0]=0X3,0x2,0X0001,0,7,6,0X5,0X04,0x000b,10,9,8,0XF,0x0E,0X00d,0Xc},{[0X0]=QW,5,0X00006,7,oW,1,0X002,0X3,12,0Xd,14,15,0X8,0X9,10,0Xb},{[0x0]=tW,0X4,7,0X06,0X1,0,3,0x2,0X00D,12,0xf,0xE,9,8,11,10},{[0]=6,0X00007,0X4,5,0X02,0X00003,0X000,UW,0X000E,0X0000f,12,13,0XA,11,0X8,9},{[0x0]=7,6,5,0x4,0X3,0X2,0x1,0X0,15,14,13,0X0C,0x000B,vW,9,0X8},{[0x0]=0X8,9,0XA,11,12,0X000d,14,15,0x0,UW,2,BW,0x4,5,0X6,0x07},{[0]=0X9,0X8,0X0000b,10,0xd,12,0X0F,0xE,1,0x0,3,0X2,5,4,0X7,0x6},{[0]=10,11,0X8,9,0XE,0X000f,12,0X0000D,0X2,0X0003,0,0X1,0X6,0X7,4,0X00005},{[0]=0x000b,0xa,9,0X8,15,14,13,PW,3,2,1,0,7,0X6,0x5,4},{[0]=12,0XD,14,15,8,0x09,10,0XB,4,5,nW,0X7,oW,1,0x2,3},{[0x0]=0XD,0X000C,0X0000f,14,0X9,0X008,0X0000B,0XA,0X00005,4,7,6,1,0X0,0x3,ZW},{[0X0]=0XE,15,12,0X0000d,10,0XB,0X8,0X00009,6,0x7,4,5,2,3,0,1},{[0X0000]=15,14,0XD,12,0xb,10,0X9,0X0008,yW,6,5,4,0X003,2,0X0001,0X0000}};local K=I-UW;local e=(assert);eP=0X0000;local b,Q,o=nil,nil,(nil);while 1563135194 do if eP<=1 then if eP~=0 then Q=function(C5,t5,d5)local W5=(0X1);local R5=(nil);do repeat if not(W5<=0)then if W5==0x1 then R5=(C5/B[t5])%B[d5];W5=2;else R5=R5-R5%1;W5=0;end;else return R5;end;until false;end;end;eP=0X2;else b=function()local Kq,iq,Iq,dq=V(A,a,a+3);a=a+0X4;do return dq*16777216+Iq*65536+iq*256+Kq;end;end;eP=3;end;else if eP==0X2 then do o=function()local nb,ub=nil,(nil);for aZ=0,2 do if not(aZ<=0)then if aZ~=1 then do return ub*U+nb;end;else if not(ub>=I)then else ub=ub-U;end;end;else nb,ub=b(),b();end;end;end;end;do break;end;else do local ET=(0X2);for Kz=1,31 do local sz=(0X0);repeat do if sz==0x0 then(B)[Kz]=ET;do sz=0X1;end;else do ET=ET*2;end;do sz=2;end;end;end;until sz>0x1;end;end;eP=0X1;end;end;end;local d=(setfenv);local P=function()local xE=b();local iE,FE,qE,LE,bE,pE=5,nil,nil,nil,nil,(nil);repeat if not(iE<=0X2)then do if iE<=0X4 then if iE==0X3 then if xE==0 and FE==0 then return 0x0000;end;iE=6;else qE=0X1;iE=0X03;end;else if iE~=0X005 then LE=(-0X01)^Q(FE,0x1F,1);iE=2;else FE=b();iE=0x4;end;end;end;else if not(iE<=0X000)then if iE==0x1 then do pE=Q(FE,0,0X00014)*U+xE;end;iE=0;else do bE=Q(FE,20,0x0000B);end;iE=0x00001;end;else if bE==0 then if pE==0X0 then do return LE*0;end;else local Me=0X01;do while Me<0x2 do do if Me~=0 then bE=0x0001;Me=0X0;else do qE=oW;end;Me=0X02;end;end;end;end;end;elseif bE~=2047 then else if pE~=0x00 then return LE*(1/0);else return LE*(0/0X0000);end;end;break;end;end;until false;return LE*(2^(bE-1023))*(pE/v+qE);end;local N=(y and y[NW]or function(GQ,qQ)local HQ,vQ,nQ=0X2,nil,nil;while HQ<4 do if HQ<=1 then if HQ~=0 then nQ=oW;HQ=0X0004;else vQ=1;HQ=3;end;else do if HQ~=0X2 then do qQ=qQ%U;end;do HQ=0X1;end;else GQ=GQ%U;HQ=0;end;end;end;end;HQ=0;repeat if HQ==0X0 then while GQ>0X0 and qQ>0 do local M_,j_=nil,nil;local q_=0X0;repeat if q_==0 then M_=GQ%16;q_=0X1;else do j_=qQ%16;end;break;end;until(false);q_=3;while true do if not(q_<=0X1)then if q_==2 then GQ=(GQ-M_)/16;q_=0;else do nQ=nQ+Z[M_][j_]*vQ;end;q_=0x2;end;elseif q_==0 then qQ=(qQ-j_)/0X000010;q_=0X1;else vQ=vQ*0x010;break;end;end;end;HQ=1;else do return nQ+GQ*vQ+qQ*vQ;end;end;until false;end);local H=y and y[HW]or function(Fs,Ls)Fs=Fs%U;Ls=Ls%U;return((Fs+Ls)-N(Fs,Ls))/0X00002;end;local h=(y and y.bor or function(RS,jS)local hS=(1);do repeat do if not(hS<=0X00)then if hS==1 then RS=RS%U;hS=2;else jS=jS%U;do hS=0X0;end;end;else return w-H(w-RS,w-jS);end;end;until false;end;end);local M,X=y and y.bnot or function(ll)return w-(ll%U);end,(setmetatable);eP=0X3;local sW,O,D=nil,nil,nil;while eP<0x4 do do if eP<=1 then if eP~=0 then do O=O or function(lP,ZP)local DP=0;repeat if not(DP<=0)then if DP~=1 then do return(lP*B[ZP])%U;end;else if not(ZP<0X00)then else do return D(lP,-ZP);end;end;do DP=0X0002;end;end;else if not(ZP>=0X20)then else return 0;end;DP=0x00001;end;until(false);end;end;eP=4;else O=y and y[hW];eP=0X002;end;else if eP==2 then D=y and y[MW];do eP=1;end;else sW=0X1;eP=0;end;end;end;end;eP=1;local g,z=nil,(nil);do while 0.48035733585526597 do do if not(eP<=0X0)then if eP~=0X1 then do z=function()local Hi=0x00000;local Di=(0);while-0X57272931 do local mj=V(A,a,a);a=a+0X0001;Di=h(Di,O(H(mj,127),Hi));if H(mj,128)~=0X0 then else do return Di;end;end;Hi=Hi+7;end;end;end;break;else D=D or function(jm,Om)for pb=0,1 do if pb~=0 then if not(Om<oW)then else do return O(jm,-Om);end;end;else if Om>=32 then return 0;end;end;end;local gm=nil;for q6=0x0,0x1 do do if q6~=0X00 then return gm-gm%0X001;else gm=(jm%U/B[Om]);end;end;end;end;eP=0;end;else do g={[0x02]=7,[1]=0X00005,[5]=0X4,[0X4]=1,[0x7]=6,[3]=4,[0X7]=0X003,[9]=0X0001};end;do eP=2;end;end;end;end;end;local kW=t();local eW=t();local SW=function(yH)local iH={V(A,a,a+0X0003)};local cH=1;local tH,WH=nil,nil;repeat do if cH==0 then do WH=N(iH[0X2],eW);end;do cH=0X00002;end;else tH=N(iH[UW],eW);cH=0;end;end;until cH>=0X2;local NH,VH=nil,nil;for Vy=0x0,4 do do if not(Vy<=1)then if Vy<=2 then eW=(1*eW+yH)%0X100;else do if Vy~=3 then return VH*0X00001000000+NH*0X10000+WH*256+tH;else do a=a+4;end;end;end;end;else if Vy~=0 then VH=N(iH[4],eW);else NH=N(iH[0X3],eW);end;end;end;end;end;local YW=({});local mW=function(...)return S("#",...),{...};end;do eP=0X1;end;local Y,C=nil,nil;do while eP<=0x0001 do if eP==0x0 then C=function()local pi,xi=1,nil;repeat if not(pi<=0X00000)then if pi~=0X00001 then return xi;else do xi=z();end;do pi=0;end;end;else if not(xi>K)then else return xi-U;end;do pi=0X2;end;end;until false;end;do eP=2;end;else Y=OW;eP=0x0;end;end;end;local fW=(function(zU)local RU,cU,kU=0x0,nil,nil;repeat if RU~=0X00 then kU="";RU=2;else cU=b();do RU=1;end;end;until RU>=2;RU=0X0;repeat if RU<=0 then for bm=0X1,cU,DW do local qm=(bm+0X001f3D-1);if qm>cU then qm=cU;end;local Sm=(nil);for wD=0,2 do do if not(wD<=0X0)then if wD~=1 then kU=kU..T(J(Sm));else for ex=0X01,#Sm do(Sm)[ex]=N(Sm[ex],kW);kW=(zU*kW+0X0Cb)%0x100;end;end;else Sm={V(A,a+bm-1,a+qm-1)};end;end;end;end;RU=0X1;else if RU==0x1 then do a=a+cU;end;RU=2;else do return kU;end;end;end;until false;end);eP=0X0;local W,u=nil,nil;do while eP<2 do if eP~=0X0 then u={0X2,3,0X00001};eP=0X2;else W=uW;eP=1;end;end;end;do eP=0X0;end;local rW=nil;repeat if eP~=0X00 then eP=2;else do rW={};end;eP=1;end;until eP==2;local EW,VW=nil,nil;for Kf=0x0,0X0001 do if Kf~=0X0 then function VW()local vF,CF,UF=0,nil,nil;repeat if vF<=0 then vF=2;elseif vF==0X01 then do UF={IW,IW,nil,{},{},nil,{},nil,IW};end;break;else CF={};vF=1;end;until false;do vF=0X0;end;local QF,AF=nil,nil;repeat if not(vF<=0)then if vF~=0X01 then AF={};vF=1;else UF[10]=t();break;end;else do QF=0X1;end;vF=0X2;end;until(false);local eF,wF=nil,(nil);local RF=UF[5];for fh=0,0x00006 do if fh<=0X2 then if fh<=0 then do eF=b()-0X18527;end;else if fh~=1 then(UF)[18]=b();else do for hf=1,eF do RF[hf]={[4]=t(),[5]=t(),[7]=t(),[BW]=C(),[6]=z(),[UW]=C(),[0X2]=C()};end;end;end;end;else do if fh<=0X4 then do if fh~=0x0003 then do UF[0X9]=AF;end;else(UF)[0Xa]=t();end;end;else if fh==5 then do for cd=0X1,z()do(AF)[cd]={t(),z()};end;end;else do wF=b();end;end;end;end;end;end;for dG=1,wF do local SG=(b());local TG,LG=nil,nil;for sY=0,0X2 do if not(sY<=0X0)then if sY==1 then LG=b();else for Hq=SG,TG do do UF[7][Hq]=LG;end;end;end;else do TG=b();end;end;end;end;(UF)[0X0001]=z();local mF,PF,qF,uF=UF[0X4],nil,nil,nil;for iG=0,0x04 do if iG<=1 then if iG==0X00 then PF=b()-gW;else qF={};end;else if iG<=2 then do for vT=0X0,PF-UW do do mF[vT]=VW();end;end;end;else if iG==3 then(UF)[zW]=t();else uF=t();end;end;end;end;do vF=3;end;do repeat if vF<=0X2 then do if not(vF<=0x0)then do if vF==0X1 then(UF)[0x3]=z();vF=0X002;else UF[0X000011]=t();break;end;end;else UF[6]=Q(uF,2,1)~=0;vF=4;end;end;else do if vF<=0X3 then(UF)[0X2]=Q(uF,0X1,1)~=0X0;vF=0;else if vF~=4 then UF[KW]=b();vF=1;else UF[10]=b();vF=0X5;end;end;end;end;until(false);end;local rF=(b()-0X1558C);local oF,SF=nil,nil;for ha=0X0,5 do if not(ha<=2)then if not(ha<=3)then if ha==0X00004 then do UF[8]=z();end;else do return UF;end;end;else for LF=1,eF do local DF,aF=0X001,(nil);repeat if DF~=0X000 then aF=UF[5][LF];DF=0X000;else do for vV,bV in kP(u)do local KV,GV=nil,(nil);for TB=0,0X2 do if not(TB<=0x0)then do if TB~=0X01 then if GV==0xe then local v2=(0X01);local x2,s2=nil,nil;while'9P'do do if v2<=0X00 then s2=qF[x2];do v2=0X2;end;elseif v2~=0X1 then if s2 then local oC=nil;local aC=(2);do while aC<=0X0002 do if not(aC<=0X0)then if aC==1 then do oC[#oC+0X001]={aF,KV};end;aC=0x3;else do(aF)[KV]=s2[UW];end;aC=0X00000;end;else oC=s2[0X2];aC=1;end;end;end;end;do break;end;else x2=CF[aF[bV]];v2=0;end;end;end;else if GV~=0X5 then else aF[bV]=LF+aF[bV]+1;end;end;else GV=aF[KV];end;end;else do KV=g[bV];end;end;end;end;end;DF=2;end;until DF>1;end;end;else if ha<=0X0 then do oF=t();end;elseif ha==1 then SF=t()~=0;else for uZ=1,rF do local JZ,sZ=nil,(nil);local eZ=(IW);local MZ=(3);do repeat do if not(MZ<=0X2)then if MZ<=4 then if MZ~=3 then sZ={eZ,{}};MZ=0x0002;else JZ=t();MZ=0X0;end;else if MZ==0X05 then do if JZ==10 then do eZ=o();end;elseif JZ==0X00018 then do eZ=P();end;elseif JZ==161 then eZ=o();elseif JZ==93 then eZ=CW;elseif JZ==0X97 then eZ=E(fW(oF),0X4);elseif JZ==38 then eZ=E(fW(oF),t());elseif JZ==0X73 then eZ=P()+b();elseif JZ==119 then eZ=b();elseif JZ~=0X76 then else eZ=true;end;end;do MZ=0X0004;end;else QF=QF+1;do MZ=0X00001;end;end;end;else do if not(MZ<=0X00)then do if MZ~=1 then qF[QF]=sZ;MZ=0X6;else do if SF then YW[sW]=sZ;sW=sW+UW;end;end;MZ=0X7;end;end;else do CF[uZ-1]=QF;end;do MZ=5;end;end;end;end;end;until MZ>=0X7;end;end;end;end;end;end;else function EW(zl,Sl,jl)local cl,Al,Kl,Xl=jl[0X4],jl[8],jl[0X0001],(jl[7]);local Yl=(jl[5]);local Ul,Vl=jl[0X2],(jl[6]);local hl=(X({},{__mode='\118'}));local ml=nil;local Fl=(jl[0x3]);do ml=function(...)local uL=(0X0);local LL,XL=0X1,({});local wL={[1]=XL,[2]=jl};local DL=((q and q()or _ENV));local kL,mL=mW(...);local BL=((DL==G and zl or DL));kL=kL-0X00001;do for v3=0X0,kL do if Al>v3 then XL[v3]=mL[v3+1];else do break;end;end;end;end;if not Ul then do mL=nil;end;else if Vl then(XL)[Al]={n=kL>=Al and kL-Al+0x1 or 0X0,J(mL,Al+1,kL+1)};end;end;if BL~=DL then if not(d)then _ENV=BL;else d(ml,BL);end;end;local gL,OL,hL,dL=m(function()repeat local sw=Yl[LL];local gw=(sw[0X0006]);do LL=LL+0X1;end;if not(gw>=46)then if not(gw>=0X17)then do if gw>=11 then do if not(gw<17)then if gw>=0x14 then if not(gw<21)then if gw~=22 then local sI=(sw[1]);local II,wI=XL[sI]();if not(II)then else LL=sw[3];XL[sI+3]=wI;end;else do(XL)[sw[1]]=H(XL[sw[3]],XL[sw[2]]);end;end;else if sw[0X2]==210 then LL=LL-0X1;Yl[LL]={[0x06]=2,[0X3]=(sw[3]-163),[1]=(sw[1]-0XA3)};elseif sw[0X02]==187 then LL=LL-0X01;(Yl)[LL]={[0x3]=(sw[0x003]-134),[0X1]=(sw[0X001]-0X086),[0X006]=0Xa};else repeat local pz,az,Nz=hl,XL,(sw[1]);if not(#pz>0X00)then else local dy={};for px,Jx in W,pz do for z8,C8 in W,Jx do if not(C8[0x00001]==az and C8[2]>=Nz)then else local dV=(C8[0X2]);if not dy[dV]then(dy)[dV]={az[dV]};end;(C8)[0X00001]=dy[dV];C8[2]=0X0001;end;end;end;end;until true;end;end;else if gw>=0X00012 then if gw==0X13 then do if not(not(XL[sw[0X3]]<=XL[sw[2]]))then else LL=sw[1];end;end;else local A2=sw[3];local f2=(XL[A2]);for iC=A2+1,sw[0X2]do f2=f2..XL[iC];end;XL[sw[1]]=f2;end;else XL[sw[1]]=XL[sw[3]]~=sw[7];end;end;else do if not(gw<0X00E)then if not(gw>=0X0f)then(XL)[sw[1]]=XL[sw[3]]%XL[sw[2]];else if gw==16 then if XL[sw[0X00003]]==sw[7]then do LL=sw[1];end;end;else(XL)[sw[0X1]]=D(XL[sw[3]],XL[sw[2]]);end;end;else if gw>=0Xc then if gw==0X00D then XL[sw[1]][XL[sw[0X03]]]=sw[7];else if sw[0X00002]==0X99 then LL=LL-1;Yl[LL]={[3]=(sw[0x3]-240),[1]=(sw[0X1]-0x0f0),[6]=0X0002C};elseif sw[2]~=0X24 then(XL)[sw[0X0001]]=XL[sw[3]];else LL=LL-0x1;(Yl)[LL]={[6]=0X000038,[1]=(sw[0X00001]-0Xe3),[3]=(sw[3]-227)};end;end;else local fY=(sw[1]);local UY=x(function(...)l();for U_ in...do(l)(true,U_);end;end);UY(XL[fY],XL[fY+0x1],XL[fY+0X2]);do uL=fY;end;(XL)[fY]=UY;LL=sw[3];end;end;end;end;end;else do if not(gw>=5)then if not(gw<2)then if not(gw>=0X0003)then do if sw[2]~=0X0a then repeat local Eg,kg=hl,(XL);if#Eg>0 then local ym=({});do for O3,r3 in W,Eg do do for p2,u2 in W,r3 do if u2[0X00001]==kg and u2[2]>=0 then local Yt=u2[0X2];do if not(not ym[Yt])then else ym[Yt]={kg[Yt]};end;end;(u2)[0X00001]=ym[Yt];do u2[2]=0X00001;end;end;end;end;end;end;end;until true;local GL=(sw[1]);return false,GL,GL;else LL=LL-0X01;Yl[LL]={[6]=0x38,[1]=(sw[1]-199),[0X0003]=(sw[0x003]-199)};end;end;else if gw~=0X4 then repeat local ZE,zE=hl,(XL);if#ZE>0 then local Cw=({});do for JS,dS in W,ZE do for fS,US in W,dS do if US[1]==zE and US[2]>=0 then local Y6=(US[0X2]);if not(not Cw[Y6])then else Cw[Y6]={zE[Y6]};end;(US)[1]=Cw[Y6];US[0X2]=1;end;end;end;end;end;until true;return true,sw[0X00001],0;else do(XL)[sw[1]]=sw[4];end;end;end;else if gw==0X01 then XL[sw[1]]=XL[sw[0X3]]*XL[sw[0X2]];else(XL)[sw[0X01]]={J({},0X1,sw[3])};end;end;else if gw>=8 then if not(gw<0X9)then do if gw~=10 then local GB=Sl[sw[0x3]];do(GB[0X1])[GB[2]]=XL[sw[0x1]];end;else if sw[2]==0X80 then LL=LL-1;(Yl)[LL]={[0X006]=0x18,[3]=(sw[3]-213),[1]=(sw[1]-0XD5)};elseif sw[2]==247 then LL=LL-0X0001;(Yl)[LL]={[0X6]=44,[0X0001]=(sw[1]-99),[3]=(sw[0X3]-0X63)};else repeat local cR,uR=hl,XL;if not(#cR>0)then else local C8={};do for yg,Ig in W,cR do for Ur,Fr in W,Ig do if Fr[1]==uR and Fr[0x00002]>=0X0000 then local Pj=Fr[2];if not(not C8[Pj])then else C8[Pj]={uR[Pj]};end;Fr[1]=C8[Pj];Fr[2]=0x1;end;end;end;end;end;until true;do return;end;end;end;end;else local fi=sw[0x1];local ui,Ii,Zi=XL[fi]();if not(ui)then else(XL)[fi+1]=Ii;(XL)[fi+0X00002]=Zi;LL=sw[3];end;end;else if not(gw>=0X6)then if sw[0X2]~=213 then for Fu=sw[0X01],sw[0X3]do(XL)[Fu]=nil;end;else LL=LL-0X001;Yl[LL]={[0x001]=(sw[0X001]-0x000Fc),[0X00006]=56,[0x3]=(sw[3]-0XfC)};end;else if gw~=7 then local p5=(sw[0X1]);(XL[p5])(XL[p5+0x01]);uL=p5-0X001;else(XL)[sw[1]]=XL[sw[0X3]]+XL[sw[2]];end;end;end;end;end;end;end;else if not(gw<34)then do if not(gw<40)then do if gw<43 then do if not(gw>=0X29)then if XL[sw[3]]==sw[0x7]then else LL=sw[1];end;else do if gw==0x00002a then local RH=sw[0X1];for cJ=RH,RH+(sw[0x3]-1)do(XL)[cJ]=mL[Al+(cJ-RH)+1];end;else local Fc=sw[0X001];(XL)[Fc]=XL[Fc](J(XL,Fc+0x1,uL));uL=Fc;end;end;end;end;else if not(gw>=44)then XL[sw[0X1]]=BL[sw[4]];else if gw~=45 then if sw[2]==0XD3 then LL=LL-1;(Yl)[LL]={[0X0003]=(sw[3]-0xaF),[0X0001]=(sw[0X1]-175),[6]=0X18};else local Nm=(kL-Al);local Dm=sw[0X1];if not(Nm<0)then else Nm=-1;end;for y0=Dm,Dm+Nm do(XL)[y0]=mL[Al+(y0-Dm)+1];end;do uL=Dm+Nm;end;end;else do(XL)[sw[0X00001]]=true;end;end;end;end;end;else if not(gw>=37)then if gw>=0x0023 then if gw==36 then local pZ=sw[3];local FZ=sw[1];local QZ=(sw[0X02]);do if pZ==0 then else uL=FZ+pZ-0X01;end;end;local fZ,YZ=nil,nil;do if pZ~=1 then fZ,YZ=mW(XL[FZ](J(XL,FZ+0X0001,uL)));else fZ,YZ=mW(XL[FZ]());end;end;do if QZ~=0X1 then if QZ==0x0 then fZ=fZ+FZ-1;uL=fZ;else fZ=FZ+QZ-2;uL=fZ+0X001;end;local UV=0X0;for F4=FZ,fZ do UV=UV+0X001;XL[F4]=YZ[UV];end;else uL=FZ-0X1;end;end;else do(XL)[sw[1]]=XL[sw[0X03]]<=XL[sw[2]];end;end;else(XL)[sw[0X01]]=XL[sw[3]]%sw[7];end;else do if not(gw>=0X000026)then local vT=sw[0X01];(XL)[vT]=XL[vT](XL[vT+1],XL[vT+0X2]);uL=vT;else if gw==0X0027 then local Ri=(sw[1]);local fi,di=XL[Ri]();if not(fi)then else XL[Ri+1]=di;LL=sw[0X0003];end;else(XL)[sw[0x1]]=XL[sw[3]][XL[sw[2]]];end;end;end;end;end;end;else if not(gw>=0x1C)then if gw<0X00019 then do if gw~=0x0018 then do if not(not(XL[sw[3]]<XL[sw[0X2]]))then else do LL=sw[0X1];end;end;end;else XL[sw[0X1]]=#XL[sw[3]];end;end;else if not(gw>=26)then(XL[sw[0X00001]])[sw[0X4]]=sw[0X007];else do if gw~=27 then XL[sw[1]]=not XL[sw[0X3]];else(XL)[sw[0X1]]=XL[sw[0x3]]<XL[sw[0X2]];end;end;end;end;else if not(gw>=31)then do if gw<0X1d then if sw[0X2]~=0X34 then repeat local of,Cf=hl,(XL);if not(#of>0X0)then else local Ux=({});for V3,Q3 in W,of do for UA,sA in W,Q3 do if not(sA[0X1]==Cf and sA[0X0002]>=0X0)then else local yc=sA[0X0002];if not Ux[yc]then do Ux[yc]={Cf[yc]};end;end;(sA)[1]=Ux[yc];do(sA)[0X02]=0X01;end;end;end;end;end;until true;do return false,sw[1],uL;end;else do LL=LL-1;end;(Yl)[LL]={[0x03]=(sw[3]-0XD3),[1]=(sw[0X1]-211),[6]=79};end;else if gw~=0X1E then local N2=(sw[1]);(XL[N2])(XL[N2+1],XL[N2+2]);uL=N2-1;else do XL[sw[1]]=sw[0X4];end;end;end;end;else if gw>=32 then if gw~=33 then uL=sw[0X1];XL[uL]=XL[uL]();else local Et=(cl[sw[0X3]]);local it=Et[9];local Jt,Vt=#it,(nil);if not(Jt>0X0)then else Vt={};for nw=0X1,Jt do local qw=it[nw];if qw[1]==0 then(Vt)[nw-1]={XL,qw[0X2]};else(Vt)[nw-1]=Sl[qw[2]];end;end;c(hl,Vt);end;(XL)[sw[1]]=EW(BL,Vt,Et);end;else local KQ=sw[1];local jQ,NQ=XL[KQ],XL[KQ+0X01];local eQ=(XL[KQ+0x2]);XL[KQ]=x(function()for Xz=jQ,NQ,eQ do l(true,Xz);end;end);LL=sw[3];end;end;end;end;end;else if not(gw>=69)then do if gw<57 then if not(gw>=51)then if not(gw<0x0030)then if gw<49 then(XL)[sw[0X1]]=XL[sw[3]][sw[0X007]];else if gw~=50 then local Wb=sw[0X1];local sb=x(function(...)l();for af,Xf in...do l(true,af,Xf);end;end);sb(XL[Wb],XL[Wb+0x1],XL[Wb+0x2]);uL=Wb;(XL)[Wb]=sb;LL=sw[0X3];else if not(XL[sw[0X3]]<=sw[0x7])then LL=sw[1];end;end;end;else if gw~=47 then local Xt=sw[0x0001];local It=XL[sw[0x00003]];do XL[Xt+0x001]=It;end;(XL)[Xt]=It[sw[0x7]];else XL[sw[0X1]]={};end;end;else if not(gw>=54)then if not(gw>=52)then do(XL)[sw[1]]=XL[sw[3]]>XL[sw[2]];end;else if gw==0X000035 then XL[sw[0X01]]=N(XL[sw[3]],XL[sw[2]]);else local nE=(sw[0X1]);uL=nE+sw[3]-1;XL[nE]=XL[nE](J(XL,nE+1,uL));uL=nE;end;end;else if not(gw>=55)then do(XL)[sw[1]]=XL[sw[0X3]]^XL[sw[2]];end;else if gw~=56 then do XL[sw[0X1]]=h(XL[sw[3]],XL[sw[0X002]]);end;else if sw[0x2]~=0x00008 then do XL[sw[1]]=nil;end;else LL=LL-1;do Yl[LL]={[3]=(sw[0X0003]-172),[0X006]=0x000a,[1]=(sw[0X01]-0xaC)};end;end;end;end;end;end;else if gw<63 then if not(gw<60)then if not(gw>=61)then repeat local Hd,vd=hl,(XL);do if#Hd>0 then local ZT={};for NI,gI in W,Hd do for YJ,eJ in W,gI do if eJ[0X1]==vd and eJ[2]>=0x0 then local IQ=eJ[2];do if not ZT[IQ]then do(ZT)[IQ]={vd[IQ]};end;end;end;(eJ)[0X1]=ZT[IQ];eJ[0x02]=0X0001;end;end;end;end;end;until true;return true,sw[0X00001],1;else do if gw==0X003E then do XL[sw[1]]=false;end;else uL=sw[0X1];(XL[uL])();uL=uL-0X1;end;end;end;else if not(gw<0X003a)then do if gw~=0X0003b then XL[sw[1]]=M(XL[sw[3]]);else if XL[sw[0X0003]]~=XL[sw[0X2]]then else LL=sw[0X0001];end;end;end;else(wL)[sw[0X3]]=XL[sw[0x1]];end;end;else do if not(gw>=0X0042)then if gw<0X40 then(BL)[sw[4]]=XL[sw[0X001]];else if gw==0X00041 then(XL[sw[0X1]])[XL[sw[0X3]]]=XL[sw[2]];else do(XL)[sw[1]]=O(XL[sw[0X003]],XL[sw[2]]);end;end;end;else do if not(gw>=67)then do if not(XL[sw[1]])then else do LL=sw[3];end;end;end;else if gw==68 then local Ov=(sw[1]);local Vv,xv=XL[Ov],((sw[0X2]-1)*50);for qr=0x1,sw[3]do Vv[xv+qr]=XL[Ov+qr];end;else(XL)[sw[0x00001]]=XL[sw[0x03]]>=XL[sw[0x2]];end;end;end;end;end;end;end;end;else if gw<80 then if gw>=0X4a then if not(gw>=77)then do if gw<75 then if XL[sw[3]]==XL[sw[2]]then else LL=sw[0X1];end;else if gw==76 then if not XL[sw[1]]then LL=sw[0x3];end;else do XL[sw[0X1]]=XL[sw[0x0003]]==XL[sw[2]];end;end;end;end;else do if gw>=78 then if gw==79 then XL[sw[1]]=-XL[sw[3]];else(XL)[sw[0X1]]=XL[sw[0x3]]~=XL[sw[2]];end;else if XL[sw[0x003]]<=XL[sw[2]]then LL=sw[0x001];end;end;end;end;else if not(gw>=71)then do if gw~=0x46 then if XL[sw[3]]<XL[sw[2]]then LL=sw[1];end;else do(XL)[sw[0X01]]=XL[sw[0X3]]-XL[sw[2]];end;end;end;else do if not(gw<0X0048)then do if gw~=0X49 then local Ot=sw[1];uL=Ot+sw[3]-1;XL[Ot](J(XL,Ot+0X001,uL));uL=Ot-0X1;else local Qg=(sw[1]);(XL[Qg])(J(XL,Qg+1,uL));uL=Qg-0X01;end;end;else local uG=(sw[0X0003]);(XL)[sw[1]]=XL[uG]..XL[uG+1];end;end;end;end;else do if gw>=86 then if gw>=0x59 then if gw>=90 then if gw==0x5b then XL[sw[0x1]]=rW[sw[3]];else local W2=(sw[1]);local f2=x(function(...)l();for op,Jp,sp,Op,qp,Up,Zp,Fp,ap,Yp in...do(l)(true,{op,Jp,sp,Op,qp,Up,Zp,Fp,ap,Yp});end;end);(f2)(XL[W2],XL[W2+1],XL[W2+0X2]);uL=W2;(XL)[W2]=f2;LL=sw[0X3];end;else(rW)[sw[0X003]]=XL[sw[0X1]];end;else do if not(gw<87)then if gw~=88 then if sw[0X0002]==0X0049 then LL=LL-0X001;Yl[LL]={[3]=(sw[3]-86),[0X6]=10,[0X1]=(sw[1]-86)};else do repeat local FM,eM=hl,XL;if not(#FM>0x000)then else local Mj=({});for Xj,sj in W,FM do do for sL,aL in W,sj do if not(aL[0X1]==eM and aL[0x02]>=0X00000)then else local mV=aL[0x2];do if not Mj[mV]then Mj[mV]={eM[mV]};end;end;aL[1]=Mj[mV];aL[0X2]=0X00001;end;end;end;end;end;until true;end;local Ll=sw[0X00001];return false,Ll,Ll+sw[0x03]-0X00002;end;else local nO=Sl[sw[3]];do XL[sw[1]]=nO[0X1][nO[0X002]];end;end;else(XL)[sw[0X01]]=wL[sw[0X3]];end;end;end;else if gw<83 then if gw<0X51 then local rp=(sw[0x1]);XL[rp]=XL[rp](XL[rp+0X1]);do uL=rp;end;else if gw==82 then local LY=(sw[0x1]);local vY=sw[3];uL=LY+vY-0X1;repeat local y1,U1=hl,(XL);if#y1>0 then local VX=({});for im,Gm in W,y1 do for uV,UV in W,Gm do if UV[0X0001]==U1 and UV[0x2]>=0x0 then local ka=(UV[0X2]);do if not VX[ka]then do VX[ka]={U1[ka]};end;end;end;(UV)[1]=VX[ka];(UV)[2]=0X0001;end;end;end;end;until true;do return true,LY,vY;end;else LL=sw[0X3];end;end;else if not(gw<84)then if gw~=0X55 then local sY=(sw[0X1]);local cY,XY=XL[sY],(sw[0X2]-0X0001)*50;for Of=0x1,uL-sY do cY[XY+Of]=XL[sY+Of];end;else XL[sw[1]][sw[4]]=XL[sw[0x2]];end;else(XL)[sw[0X0001]]=XL[sw[3]]/XL[sw[0X0002]];end;end;end;end;end;end;end;until false;end);if not(gL)then do if Y(OL)=="string"then if j(OL,"at\116empt\032t\111\032y\105el\100\032a\099\114os\115\032\109eta\109e\116\104\111\100/\067%\045call\032\098ou\110\100\097r\121")then do return coroutine.yield();end;end;do if not(j(OL,'^\046-\058%d\043\058 '))then(r)(OL,0);else(r)("Luraph Script:"..(Xl[LL-1]or"(internal)")..": "..s(OL),0X0);end;end;else r(OL,0);end;end;else do if OL then do if dL==1 then return XL[hL]();else return XL[hL](J(XL,hL+0X01,uL));end;end;else if hL then return J(XL,hL,dL);end;end;end;end;end;end;if d then d(ml,zl);end;do return ml;end;end;end;end;local TW=(VW());do for vg=0X0000,0X00002 do if vg<=0 then(rW)[1]=YW;else if vg~=1 then return EW(G,IW,TW)(...);else do YW=IW;end;end;end;end;end;end)(table.insert,string.match,coroutine.wrap,88116,type,1,error,0X000010,"band",string.char,12,string.byte,0Xd,nil,tonumber,pcall,string.rep,unpack,6,0X0,17,false,string.gsub,string.sub,ipairs,"\098xo\114",bit32,next,7,coroutine.yield,"l\115\104\105\102\116",rawset,0XE,0x003,2,7997,0x004,"\114\115hift",_ENV,10,getfenv,5,{60,287893118,200183100,4276803836,299584784,3065665183,4165977562,2422075787,755533527},...);end;