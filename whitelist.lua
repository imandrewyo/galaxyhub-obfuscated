-- This file was generated using Luraph Obfuscator v13.5.8

return(function(oz,tz,uz,Ez,Fz,UA,Dz,Lz,JA,vz,cz,Pz,Kz,wz,Yz,kz,Wz,gz,Rz,ez,dz,jz,yz,Bz,Mz,HA,Xz,Vz,iz,Iz,nz,qz,hz,Nz,Az,Oz,Tz,lz,aA,Zz,pA,rz,Gz,fz,sz,bz,J,...)local H,U,w,C,S,Q,z,V,Z=nil,nil,nil,nil,nil,nil,nil,nil,nil;for rq=0,8 do do if not(rq<=3)then do if not(rq<=5)then if not(rq<=0X6)then do if rq==7 then do V=Dz;end;else Z=Vz;end;end;else z=Tz;end;else if rq~=4 then Q=string.sub;else S=fz;end;end;end;elseif rq<=0X1 then if rq==0X00 then do H=cz;end;else U=Zz;end;else if rq==2 then w=sz;else C=Lz;end;end;end;end;local f=(iz);local D,c,N=nil,nil,nil;local a=tonumber;local mA=1;local k=(unpack or Nz.unpack);while mA<0x03 do if mA<=0X0 then N=coroutine.yield;do mA=0X00003;end;else if mA==1 then do D=kz;end;do mA=2;end;else c=oz;mA=0;end;end;end;local x=error;local I=((w and w()or _ENV));do mA=2;end;local o,y,b=nil,nil,(nil);while mA<=0X0003 do if mA<=1 then do if mA~=0 then mA=4;else ymA=1;end;end;else if mA==0X2 then mA=0x3;else do o=wz;end;do mA=0X0;end;end;end;end;local M=(0X0001);y=Z(Q(y,0x05),"\046.",function(IR)if C(IR,0X0002)==72 then local N5=(0);repeat if N5==0X0 then b=a(Q(IR,1,1));N5=1;else return"";end;until false;else local AQ,WQ=0,(nil);repeat if AQ~=0X0 then do if b then local nY=(nil);local gY=(0);repeat do if not(gY<=0)then if gY~=0x1 then return nY;else b=nil;gY=0X2;end;else nY=c(WQ,b);do gY=0X01;end;end;end;until false;else return WQ;end;end;AQ=0X02;else WQ=z(a(IR,0X10));do AQ=1;end;end;until AQ>=2;end;end);local h=(4294967296);local i=(Iz.wrap);local T=rawget;local X=(function()local NK=(C(y,M,M));local hK=(0);while true do if hK==0X00 then M=M+1;do hK=0X001;end;else return NK;end;end;end);local G=(0X80000000);local A,W,B=nil,nil,nil;for w4=0X0,2 do if w4<=0 then A=function()local I4,x4,f4,l4,U4=1,nil,nil,nil,nil;while true do if not(I4<=0)then if I4==1 then x4,f4,l4,U4=C(y,M,M+3);I4=2;else M=M+4;I4=0;end;else return U4*16777216+l4*65536+f4*256+x4;end;end;end;else if w4==0X1 then W=G-Mz;else B=2^0X34;end;end;end;local m,r,g,d,u,t,R,L=type,nil,nil,nil,nil,nil,nil,(nil);for U_=0,7 do if U_<=0X03 then if U_<=1 then if U_==0X00 then r=h-0X1;else g={[0]=0x1};end;else if U_==2 then do local Qt=0X01;local ht=(nil);while Qt<0x2 do if Qt~=0x0 then ht=2;Qt=0X0;else do for Qh=1,yz do(g)[Qh]=ht;ht=ht*0X02;end;end;Qt=0x00002;end;end;end;else d=function(Br,vr,Zr)local ir,lr=0X2,nil;do while(true)do if not(ir<=0)then if ir==1 then return lr;else lr=(Br/g[vr])%g[Zr];do ir=0;end;end;else lr=lr-lr%0x001;ir=0x1;end;end;end;end;end;end;elseif not(U_<=0X0005)then if U_==0X06 then do R=(Rz or Kz);end;else L=Nz.insert;end;else if U_~=0x4 then t={[0]={[bz]=0X0,Mz,0x2,0X00003,0X4,0X5,0x6,0x7,8,9,0xa,11,12,0X000d,14,Xz},{[0x0]=0X01,0,0X3,0X002,5,0X4,7,0X00006,9,8,11,10,Az,12,0X00F,0xE},{[0]=2,3,0x0,1,6,7,0X0004,0x5,0Xa,11,0X8,0x9,0Xe,15,0Xc,13},{[0]=3,2,1,0x0,0X07,6,Gz,0x4,11,0x0a,0x00009,8,0XF,14,13,12},{[0x00000]=0x4,0X05,hz,0X7,0,Mz,0X00002,3,12,13,0xE,0X0f,8,9,10,Bz},{[0]=Gz,0x4,rz,6,1,0,3,0X2,13,12,0X000f,0x000e,Wz,0x8,11,0XA},{[0X00000]=6,rz,0X4,0X5,0X0002,0X00003,0x0,1,14,15,12,0x0000d,0Xa,11,0X00008,9},{[0x0]=7,6,5,4,0x3,2,Mz,0,15,14,13,12,0Xb,10,0x0009,8},{[0]=8,9,0XA,0x0000B,12,13,gz,15,0X0,0X00001,2,dz,4,5,6,7},{[0]=0X9,8,11,uz,0XD,0xc,0X000F,gz,1,0,3,2,0X5,lz,0X007,6},{[0]=0X0000A,11,0x8,0X9,0X00E,0xF,0X0c,13,2,0X3,0,1,6,0X007,4,0X00005},{[0]=11,0xa,0X9,0X8,0xF,14,0XD,12,3,2,0X001,0,0X07,hz,5,0X04},{[0]=12,Az,0xE,Xz,8,9,0X0000a,11,4,5,6,0x7,0,Mz,2,0X3},{[0]=0X000D,0Xc,0XF,14,9,8,0X0b,10,5,4,7,6,1,0X000,3,2},{[0]=0xe,15,0XC,0XD,uz,0Xb,0X8,9,6,0x007,0x4,0x5,0X02,3,bz,1},{[0X0]=Xz,14,0x0000D,tz,Bz,0xA,9,0X8,0X7,0x6,0X5,4,3,0x002,0X001,0}};else u=function()local g5,L5=A(),A();if not(L5>=G)then else L5=L5-h;end;return L5*h+g5;end;end;end;end;local l=(function()local ZX=(A());local XX,DX,uX,oX,qX=nil,nil,nil,nil,(nil);for kx=0X0,7 do if not(kx<=0X003)then if kx<=5 then if kx~=0X4 then do qX=d(DX,0x0,0x000014)*h+ZX;end;else oX=d(DX,0x14,11);end;else if kx~=0X6 then return uX*(0X002^(oX-1023))*(qX/B+XX);else if oX==0X0 then if qX==0 then do return uX*0x0;end;else oX=0X01;XX=0;end;elseif oX~=2047 then else do if qX~=0 then do return uX*(Mz/0);end;else return uX*(0/0);end;end;end;end;end;else if kx<=0X01 then do if kx~=0X0 then do DX=A();end;else XX=1;end;end;else if kx==2 then do if ZX==0X0 and DX==0X00 then return bz;end;end;else uX=(-0X1)^d(DX,0X1f,0X001);end;end;end;end;end);local K,s=R and R[vz]or function(PL,YL)PL=PL%h;local XL,OL,GL=1,nil,nil;repeat do if XL<=0X01 then if XL==0 then do OL=0X0001;end;do XL=0x3;end;else YL=YL%h;XL=0;end;elseif not(XL<=2)then if XL~=0x3 then do return GL+PL*OL+YL*OL;end;else GL=0;do XL=2;end;end;else while PL>0 and YL>0X0000 do local yG=0x02;local xG,eG=nil,nil;while yG<3 do if not(yG<=0X00000)then if yG==0x1 then do eG=YL%Oz;end;yG=0;else xG=PL%0x10;do yG=1;end;end;else GL=GL+t[xG][eG]*OL;yG=0X003;end;end;do for lK=0x00,2 do if lK<=0x0 then PL=(PL-xG)/16;else do if lK~=0X001 then do OL=OL*16;end;else do YL=(YL-eG)/0X000010;end;end;end;end;end;end;end;do XL=0X4;end;end;end;until false;end,(Yz);local v=(R and R[jz]or function(pj,Oj)local Tj=0X01;repeat do if Tj<=0X0 then Oj=Oj%h;Tj=2;else if Tj~=1 then return((pj+Oj)-K(pj,Oj))/2;else pj=pj%h;do Tj=0;end;end;end;end;until false;end);local O=R and R.bor or function(h8,m8)do for fc=0X00000,2 do do if fc<=0 then h8=h8%h;else do if fc==1 then do m8=m8%h;end;else return r-v(r-h8,r-m8);end;end;end;end;end;end;end;local Y,j=R and R.bnot or function(UG)return r-(UG%h);end,(R and R.lshift);local xz,mz,E,P,F,Jz,e,p,pz,Hz=nil,nil,nil,nil,nil,nil,nil,nil,nil,nil;local q=(R and R.rshift);do for p7=0X0,0XB do if not(p7<=0X0005)then if not(p7<=8)then if not(p7<=0X9)then if p7~=0x00A then Hz=function(Hd)local bd,gd,Zd=0X0,nil,nil;while bd<=0X1 do if bd==0 then do gd={C(y,M,M+3)};end;do bd=0x1;end;else Zd=K(gd[1],pz);bd=2;end;end;local vd=(K(gd[0X2],pz));local fd=K(gd[3],pz);local Cd=(K(gd[4],pz));bd=0;repeat if not(bd<=0X000)then do if bd==0X1 then do return Cd*0x1000000+fd*ez+vd*0X100+Zd;end;else do M=M+4;end;bd=0X01;end;end;else pz=(0X0000eD*pz+Hd)%256;bd=2;end;until false;end;else pz=X();end;else p=qz;end;else if p7<=6 then do F=function()local KK=nil;for U1=0X000,0X002 do if not(U1<=0X0)then if U1~=1 then return KK;else if KK>W then return KK-h;end;end;else KK=E();end;end;end;end;elseif p7==7 then Jz=X();else do e={0x1,6,3};end;end;end;else if p7<=2 then if not(p7<=0X00)then if p7==0x1 then j=j or function(OV,GV)do if GV>=0x00020 then return 0X000;end;end;local nV=0X00;repeat if nV==0 then do if not(GV<0X0)then else return q(OV,-GV);end;end;nV=1;else do return(OV*g[GV])%h;end;end;until(false);end;else q=q or function(Mt,et)local Pt,Wt=0,(nil);repeat if Pt<=1 then do if Pt~=0X0000 then Wt=(Mt%h/g[et]);Pt=0X2;else do if et>=32 then return bz;end;end;Pt=0X3;end;end;elseif Pt==0X2 then return Wt-Wt%0X1;else if not(et<0)then else return j(Mt,-et);end;Pt=1;end;until false;end;end;else xz={};end;else if not(p7<=0X3)then if p7~=4 then P={[7]=5,[0X5]=6,[0X2]=0X0001,[1]=0X5,[5]=0X1,[6]=2,[lz]=9,[0X0]=5,[9]=0X002,[0X3]=4,[0x8]=4};else E=function()local yP=(0x00);local FP=0;repeat local q4=(C(y,M,M));M=M+0X0001;yP=O(yP,j(v(q4,127),FP));do if v(q4,128)==0 then return yP;end;end;do FP=FP+7;end;until false;end;end;else do mz={};end;end;end;end;end;end;local Uz=(function(...)return H(Pz,...),{...};end);local az=function(fs)local Ss=(A());local Us=(nz);for zb=0X1,Ss,7997 do local ub=(zb+7997-1);if not(ub>Ss)then else ub=Ss;end;local Zb=1;local Lb=nil;do while true do if not(Zb<=0X00000)then if Zb~=0x001 then Us=Us..z(k(Lb));break;else Lb={C(y,M+zb-1,M+ub-1)};do Zb=0;end;end;else for ma=1,#Lb do for IZ=0X0,0X00001 do if IZ~=0X00000 then Jz=(fs*Jz+0X7B)%256;else Lb[ma]=K(Lb[ma],Jz);end;end;end;Zb=0X02;end;end;end;end;M=M+Ss;return Us;end;local Qz,Cz,zz=nil,nil,nil;local Sz=1;do for Nn=0,0x006 do do if not(Nn<=2)then if not(Nn<=4)then if Nn==0X00005 then do mz=nil;end;else return Qz(zz,Ez,I)(...);end;else if Nn~=0x3 then(xz)[0X1]=mz;else do zz=Cz();end;end;end;elseif not(Nn<=0X0)then if Nn==0X01 then function Qz(VS,YS,TS)local cS=VS[4];local iS,dS,ES,DS=VS[0X3],VS[9],VS[6],(VS[1]);local HS=VS[0X00005];local JS,kS=VS[0X00007],(VS[2]);local SS=(f({},{__mode="\118"}));local gS=(nil);gS=function(...)local xX,BX=0X1,({});local PX=({[1]=BX,[2]=VS});local gX=((w and w()or _ENV));local rX,GX=Uz(...);local wX=((gX==I and TS or gX));rX=rX-0X1;for UU=0,rX do if kS>UU then(BX)[UU]=GX[UU+1];else break;end;end;if not ES then GX=nil;elseif DS then BX[kS]={n=rX>=kS and rX-kS+1 or 0x0,k(GX,kS+0X1,rX+0X001)};end;local XX=0;if wX==gX then else do if not(o)then _ENV=wX;else o(gS,wX);end;end;end;local dX,DX,MX,zX=U(function()do while true do local hN=cS[xX];local HN=(hN[7]);xX=xX+0X01;if HN>=45 then if HN<67 then if not(HN>=0X38)then if HN<50 then if HN>=47 then if not(HN>=0X30)then(BX)[hN[0X6]]={k({},1,hN[0X01])};else if HN~=49 then do repeat local rT,KT=SS,BX;if#rT>0 then local E5=({});for JY,XY in V,rT do for Gd,Kd in V,XY do if not(Kd[0X1]==KT and Kd[2]>=0X000)then else local Z1=(Kd[2]);if not(not E5[Z1])then else(E5)[Z1]={KT[Z1]};end;Kd[1]=E5[Z1];Kd[2]=1;end;end;end;end;until true;end;return true,hN[6],0X1;else do if BX[hN[1]]~=BX[hN[3]]then else xX=hN[6];end;end;end;end;else do if HN~=0X2e then local OA=(hN[0x6]);local hA=hN[0x1];XX=OA+hA-1;repeat local P7,K7=SS,(BX);if#P7>0 then local sS=({});for YM,xM in V,P7 do do for a8,R8 in V,xM do if not(R8[1]==K7 and R8[0X2]>=0X0)then else local uT=(R8[0X002]);do if not sS[uT]then(sS)[uT]={K7[uT]};end;end;do R8[1]=sS[uT];end;do R8[2]=1;end;end;end;end;end;end;until true;do return true,OA,hA;end;else do(BX)[hN[0X6]]={};end;end;end;end;else if HN>=53 then do if HN>=54 then do if HN==0X37 then if hN[0X3]==192 then xX=xX-0x1;do cS[xX]={[7]=0X13,[0x0001]=(hN[0X00001]-98),[0X00006]=(hN[0X006]-98)};end;else do BX[hN[6]]=-BX[hN[1]];end;end;else local Bi=(hN[1]);BX[hN[0X0006]]=BX[Bi]..BX[Bi+1];end;end;else local Gp,Ip,Np=hN[0x0006],hN[0X1],(hN[3]);if Ip~=0 then XX=Gp+Ip-1;end;local Xp,tp=nil,nil;if Ip~=0x1 then Xp,tp=Uz(BX[Gp](k(BX,Gp+1,XX)));else do Xp,tp=Uz(BX[Gp]());end;end;do if Np==0X1 then XX=Gp-1;else if Np==0 then do Xp=Xp+Gp-1;end;XX=Xp;else Xp=Gp+Np-0X2;XX=Xp+1;end;local y3=0X0;for dJ=Gp,Xp do do y3=y3+0x1;end;BX[dJ]=tp[y3];end;end;end;end;end;else if not(HN<0X33)then if HN~=52 then local dW=(hN[0X1]);local KW=BX[dW];for lS=dW+0X1,hN[0X3]do KW=KW..BX[lS];end;(BX)[hN[6]]=KW;else do(BX[hN[6]])[hN[5]]=BX[hN[3]];end;end;else BX[hN[0x6]][BX[hN[1]]]=hN[0X4];end;end;end;else if not(HN>=61)then do if not(HN>=58)then if HN~=57 then do BX[hN[0X6]]=v(BX[hN[1]],BX[hN[0x3]]);end;else repeat local Jv,tv=SS,(BX);if not(#Jv>0X0)then else local I6={};for W5,f5 in V,Jv do for mX,fX in V,f5 do if fX[0X1]==tv and fX[2]>=0X0 then local mm=(fX[0x2]);if not(not I6[mm])then else(I6)[mm]={tv[mm]};end;fX[1]=I6[mm];(fX)[0X2]=1;end;end;end;end;until true;return false,hN[0X006],XX;end;else if not(HN>=59)then local Ko=hN[6];(BX)[Ko]=BX[Ko](BX[Ko+1],BX[Ko+2]);XX=Ko;else if HN~=60 then if BX[hN[1]]<=BX[hN[3]]then xX=hN[0X6];end;else do if not(BX[hN[0X01]]<BX[hN[0X03]])then else xX=hN[0X6];end;end;end;end;end;end;else if not(HN<64)then if HN<65 then local Vw=(hN[6]);local vw=(i(function(...)N();for EJ,XJ in...do(N)(true,EJ,XJ);end;end));vw(BX[Vw],BX[Vw+0x1],BX[Vw+2]);XX=Vw;(BX)[Vw]=vw;xX=hN[1];else if HN==66 then do BX[hN[0X0006]]=BX[hN[0X1]];end;else(BX)[hN[0X6]]=BX[hN[0X0001]]~=hN[0X4];end;end;else do if HN>=0X3e then if HN~=63 then xX=hN[1];else local FV=YS[hN[0X1]];FV[0X1][FV[2]]=BX[hN[0X6]];end;else do(BX)[hN[0X6]]=hN[0X005];end;end;end;end;end;end;else do if not(HN>=78)then if HN<72 then do if not(HN<0x45)then do if HN<70 then(BX[hN[6]])[hN[0X005]]=hN[4];else if HN==71 then BX[hN[6]]=BX[hN[1]]+BX[hN[3]];else local ah=(hN[0X6]);local fh=((hN[0X3]-1)*0X000032);local oh=(BX[ah]);do for p3=1,XX-ah do oh[fh+p3]=BX[ah+p3];end;end;end;end;end;else if HN~=68 then BX[hN[0X0006]]=BX[hN[0x001]]-BX[hN[3]];else local Vh=hN[0X6];local ah,Kh=BX[Vh+1],(BX[Vh+2]);local vh=BX[Vh];do BX[Vh]=i(function()do for NK=vh,ah,Kh do(N)(true,NK);end;end;end);end;do xX=hN[0X1];end;end;end;end;else if not(HN<0X004B)then if HN<0x4c then do if hN[3]==214 then xX=xX-1;cS[xX]={[0X0001]=(hN[1]-108),[0X6]=(hN[0X00006]-0x006C),[7]=0x0};elseif hN[3]==207 then xX=xX-1;(cS)[xX]={[1]=(hN[1]-74),[7]=55,[0x00006]=(hN[0X6]-74)};else local vV=hN[6];for iY=vV,vV+(hN[0X01]-0x01)do BX[iY]=GX[kS+(iY-vV)+1];end;end;end;else do if HN~=0X4d then do(BX)[hN[6]]=true;end;else repeat local MZ,QZ=SS,(BX);if not(#MZ>0)then else local Wv=({});do for u8,Q8 in V,MZ do for l3,j3 in V,Q8 do if j3[1]==QZ and j3[0X02]>=0 then local HG=(j3[0X2]);if not(not Wv[HG])then else Wv[HG]={QZ[HG]};end;(j3)[0X1]=Wv[HG];j3[0x2]=0X1;end;end;end;end;end;until true;return true,hN[6],0;end;end;end;else if not(HN>=73)then local Ly=hN[0X0006];BX[Ly](k(BX,Ly+0X00001,XX));XX=Ly-1;else if HN==0x4A then repeat local Rh,Th=SS,BX;if#Rh>0 then local Gq=({});for wn,cn in V,Rh do do for zY,nY in V,cn do do if nY[0X1]==Th and nY[2]>=0X0 then local eN=nY[0X0002];if not Gq[eN]then(Gq)[eN]={Th[eN]};end;do(nY)[0X00001]=Gq[eN];end;do nY[0X002]=0x1;end;end;end;end;end;end;end;until true;return;else local cP=JS[hN[1]];local fP,tP=cP[0X8],nil;local LP=(#fP);if not(LP>0X0)then else do tP={};end;for Iw=1,LP do local Dw=(fP[Iw]);if Dw[0X1]~=0 then tP[Iw-1]=YS[Dw[0x2]];else tP[Iw-1]={BX,Dw[2]};end;end;L(SS,tP);end;do(BX)[hN[0X0006]]=Qz(cP,tP,wX);end;end;end;end;end;else if HN<84 then if HN<0x51 then do if not(HN>=79)then local Hb=(hN[0X6]);local vb,db=BX[Hb],((hN[0x3]-0X1)*50);for Ns=0X1,hN[1]do vb[db+Ns]=BX[Hb+Ns];end;else if HN==80 then if hN[0X003]==100 then xX=xX-0X1;do cS[xX]={[0X006]=(hN[6]-0X48),[1]=(hN[0X1]-72),[7]=57};end;elseif hN[0x3]==19 then xX=xX-0x1;cS[xX]={[1]=(hN[1]-13),[6]=(hN[6]-13),[7]=66};else do BX[hN[0x06]]=GX[kS+0x1];end;end;else if hN[0x3]==0X0067 then xX=xX-1;do(cS)[xX]={[1]=(hN[1]-0x31),[7]=0X0004A,[6]=(hN[0x0006]-49)};end;else for A6=hN[0X6],hN[0X00001]do BX[A6]=nil;end;end;end;end;end;else if not(HN<82)then do if HN==83 then(BX)[hN[0X00006]]=O(BX[hN[1]],BX[hN[3]]);else local ax=hN[6];(BX[ax])(BX[ax+0X1]);XX=ax-0X0001;end;end;else do BX[hN[0X6]][BX[hN[1]]]=BX[hN[3]];end;end;end;else if HN>=0X57 then do if HN>=88 then if HN~=0X0059 then if BX[hN[0X00001]]==hN[0X0004]then else xX=hN[0x6];end;else BX[hN[0X06]]=wX[hN[5]];end;else(BX)[hN[0X6]]=BX[hN[1]]~=BX[hN[3]];end;end;else if not(HN>=85)then do(BX)[hN[0X6]]=BX[hN[1]]^BX[hN[3]];end;else if HN~=86 then(BX)[hN[6]]=BX[hN[0X001]]*BX[hN[3]];else if BX[hN[0X00001]]~=BX[hN[3]]then xX=hN[6];end;end;end;end;end;end;end;end;else if not(HN>=22)then if HN<11 then if not(HN>=0X00005)then if HN<0X2 then if HN~=0X00001 then do if hN[0x3]==0Xe1 then xX=xX-1;do(cS)[xX]={[7]=19,[0X6]=(hN[0X06]-0X003D),[0X1]=(hN[0x1]-61)};end;else local JG=rX-kS;local fG=hN[0x006];if not(JG<0X000)then else JG=-1;end;for b8=fG,fG+JG do(BX)[b8]=GX[kS+(b8-fG)+1];end;XX=fG+JG;end;end;else local pp=(hN[6]);XX=pp+hN[0x1]-0X00001;BX[pp](k(BX,pp+0x1,XX));XX=pp-0x001;end;else if HN>=0x03 then if HN~=0X4 then BX[hN[0x06]]=BX[hN[0X1]]<BX[hN[3]];else if not(not(BX[hN[0X1]]<=hN[0X04]))then else xX=hN[0X6];end;end;else(BX)[hN[0X6]]=BX[hN[1]][BX[hN[0X3]]];end;end;else if not(HN<8)then do if not(HN>=9)then BX[hN[6]]=hN[0X5];else if HN~=10 then BX[hN[6]]=BX[hN[0X1]]/BX[hN[0X3]];else if BX[hN[0x1]]~=hN[0X4]then else do xX=hN[6];end;end;end;end;end;else if not(HN>=6)then BX[hN[6]]=xz[hN[0X0001]];else do if HN==7 then xz[hN[1]]=BX[hN[6]];else do repeat local v6,e6,p6=SS,BX,hN[0X6];if not(#v6>0x0)then else local ey=({});for m8,t8 in V,v6 do for Ac,yc in V,t8 do do if not(yc[0X1]==e6 and yc[2]>=p6)then else local Gf=yc[0X02];do if not(not ey[Gf])then else do(ey)[Gf]={e6[Gf]};end;end;end;(yc)[1]=ey[Gf];(yc)[0X2]=0X1;end;end;end;end;end;until true;end;end;end;end;end;end;else if HN<0x10 then do if HN>=0Xd then if HN<0Xe then if hN[0X03]~=251 then BX[hN[0x0006]]=nil;else do xX=xX-0X1;end;cS[xX]={[0X6]=(hN[0x00006]-246),[0x7]=23,[0X01]=(hN[0X1]-246)};end;else if HN~=0XF then(BX)[hN[6]]=PX[hN[1]];else local pK=hN[0X6];(BX[pK])(BX[pK+0X001],BX[pK+0X00002]);XX=pK-0X1;end;end;else if HN~=0x0000C then(BX)[hN[6]]=q(BX[hN[1]],BX[hN[3]]);else do BX[hN[6]]=BX[hN[1]][hN[0X4]];end;end;end;end;else if not(HN>=0X013)then do if HN<17 then BX[hN[6]]=BX[hN[0X1]]%hN[4];else if HN==0X12 then local Tv=hN[0X00006];BX[Tv]=BX[Tv](k(BX,Tv+1,XX));XX=Tv;else BX[hN[6]]=false;end;end;end;else if HN>=20 then if HN~=21 then BX[hN[0X6]]=BX[hN[0X1]]%BX[hN[0X00003]];else do(BX)[hN[0X00006]]=BX[hN[1]]==BX[hN[0X3]];end;end;else BX[hN[0x6]]=#BX[hN[1]];end;end;end;end;else if HN<0X21 then if HN<0x1b then if not(HN<24)then if HN>=25 then if HN~=26 then do if not(BX[hN[0x6]])then else xX=hN[0X1];end;end;else XX=hN[6];(BX[XX])();XX=XX-0X1;end;else local Ox=hN[6];local ox,xx=BX[Ox]();if ox then do xX=hN[0X1];end;(BX)[Ox+3]=xx;end;end;else if HN~=23 then do wX[hN[5]]=BX[hN[0x006]];end;else do repeat local E7,d7=SS,BX;if not(#E7>0)then else local w1={};for F8,f8 in V,E7 do for zd,Md in V,f8 do do if Md[0X001]==d7 and Md[0X002]>=0X00 then local F7=(Md[0X002]);do if not(not w1[F7])then else w1[F7]={d7[F7]};end;end;Md[1]=w1[F7];(Md)[2]=1;end;end;end;end;end;until true;end;local O5=(hN[6]);do return false,O5,O5+hN[0X1]-0X002;end;end;end;else do if HN<0X1e then do if not(HN>=0X01C)then local vg,Pg=hN[0X06],BX[hN[0x00001]];BX[vg+1]=Pg;do BX[vg]=Pg[hN[0X04]];end;else if HN==0X1d then do XX=hN[6];end;(BX)[XX]=BX[XX]();else if not(not(BX[hN[0x1]]<BX[hN[3]]))then else xX=hN[0X6];end;end;end;end;else if HN<31 then local ih=(YS[hN[0X1]]);BX[hN[0X6]]=ih[0X0001][ih[2]];else if HN==0X020 then do if hN[3]==142 then do xX=xX-1;end;(cS)[xX]={[0X6]=(hN[0X00006]-0X000014),[7]=74,[0X1]=(hN[1]-0X00014)};elseif hN[3]~=0x89 then do if not BX[hN[6]]then xX=hN[1];end;end;else xX=xX-1;cS[xX]={[1]=(hN[0x0001]-0X96),[0X07]=74,[0X6]=(hN[0X0006]-0X96)};end;end;else(BX)[hN[0x00006]]=BX[hN[1]]>=BX[hN[0x003]];end;end;end;end;end;else do if not(HN<39)then if not(HN>=42)then if HN>=40 then if HN~=0X29 then local lK=(hN[6]);local yK,QK=BX[lK]();if not(yK)then else do BX[lK+0X0001]=QK;end;xX=hN[1];end;else BX[hN[6]]=BX[hN[0x1]]>BX[hN[3]];end;else local O8=BX[hN[1]]/BX[hN[0X3]];do BX[hN[6]]=O8-O8%1;end;end;else if HN>=0X2b then do if HN==0X002c then(BX)[hN[0X6]]=not BX[hN[0X0001]];else do(BX)[hN[0X6]]=K(BX[hN[0X00001]],BX[hN[3]]);end;end;end;else local RZ=hN[0X0006];local DZ=i(function(...)(N)();for U_ in...do(N)(true,U_);end;end);DZ(BX[RZ],BX[RZ+0X0001],BX[RZ+2]);XX=RZ;(BX)[RZ]=DZ;xX=hN[0X1];end;end;else if HN<0X0024 then if HN<0X22 then do(BX)[hN[0X00006]]=j(BX[hN[1]],BX[hN[3]]);end;else if HN~=0X23 then BX[hN[0x6]]=BX[hN[0X1]]<=BX[hN[3]];else local FR=hN[0x06];local UR,VR,hR=BX[FR]();if not(UR)then else do(BX)[FR+0x1]=VR;end;do(BX)[FR+0X2]=hR;end;do xX=hN[1];end;end;end;end;else if HN>=37 then if HN==38 then local zc=hN[6];do(BX)[zc]=BX[zc](BX[zc+0X01]);end;XX=zc;else local sA=(hN[0X6]);local yA=(i(function(...)N();for et,Zt,nt,Lt,Ct,Yt,Xt,Et,ot,rt in...do N(true,{et,Zt,nt,Lt,Ct,Yt,Xt,Et,ot,rt});end;end));(yA)(BX[sA],BX[sA+0x01],BX[sA+2]);XX=sA;(BX)[sA]=yA;xX=hN[1];end;else local q2=(hN[0x6]);local M2,r2=BX[q2]();do if not(M2)then else for L_=0X001,hN[3]do BX[q2+L_]=r2[L_];end;xX=hN[0X1];end;end;end;end;end;end;end;end;end;end;end;end);if dX then if DX then if zX==1 then return BX[MX]();else do return BX[MX](k(BX,MX+1,XX));end;end;elseif MX then return k(BX,MX,zX);end;else do if m(DX)=="string"then if s(DX,"att\101m\112t \116\111\032\121\105e\108\100 a\099ro\115s\032\109\101\116a\109et\104od\047\067%\045\099al\108\032\098\111un\100ar\121")then return coroutine.yield();end;if s(DX,"^.-:%d+: ")then x('\076\117r\097ph\032\083c\114\105pt:'..(dS[xX-0X001]or'\040\105\110\116\101\114n\097\108)')..": "..S(DX),0);else x(DX,0X0);end;else x(DX,0x0);end;end;end;end;do if o then o(gS,TS);end;end;do return gS;end;end;else function Cz()local UK,GK,kK=nil,nil,(nil);for HT=0X000,3 do if HT<=1 then if HT==0 then else UK={Ez,nil,Ez,{},nil,Ez,{},Ez,{}};end;else if HT==2 then GK={};else kK={};end;end;end;local zK=(0X03);while zK<=0X005 do if zK<=2 then do if not(zK<=0X0000)then if zK==0X1 then for E8=0X01,E()do do(kK)[E8]={X(),E()};end;end;zK=0X2;else UK[12]=A();do zK=5;end;end;else(UK)[0xf]=X();zK=0x4;end;end;else if zK<=0X003 then do(UK)[8]=kK;end;do zK=0X1;end;else if zK~=4 then(UK)[Fz]=A();zK=0;else do(UK)[0X3]=E();end;zK=6;end;end;end;end;(UK)[11]=A();(UK)[0X00005]=E();local eK=(nil);do for tI=0X0,0x2 do do if tI<=0 then(UK)[JA]=E();else if tI~=1 then eK={};else do(UK)[16]=A();end;end;end;end;end;end;local MK=(UK[4]);zK=0;local tK=(nil);do while zK~=0X2 do if zK==0x0 then tK=A()-88211;zK=1;else for Km=0x01,tK do do MK[Km]={[rz]=E(),[4]=X(),[6]=F(),[3]=F(),[5]=X(),[JA]=X(),[0x1]=F()};end;end;do zK=0X002;end;end;end;end;local cK=UK[0X00007];zK=4;local QK,IK,CK,AK=nil,nil,nil,(nil);repeat do if zK<=2 then do if not(zK<=0X00000)then if zK~=1 then do AK=A()-0XeDAF;end;zK=6;else for vE=0x0001,CK do local wE=A();local ZE=(A());local dE=A();for p_=wE,ZE do UK[9][p_]=dE;end;end;zK=2;end;else IK=A()-39364;do zK=5;end;end;end;else if not(zK<=0X03)then if zK~=0X4 then for Tj=0x000,IK-1 do do(cK)[Tj]=Cz();end;end;zK=3;else QK=1;zK=0x0;end;else CK=A();zK=0X1;end;end;end;until zK==0x006;local nK,FK,oK=nil,nil,(nil);for tY=0,0X8 do if not(tY<=3)then if not(tY<=0X5)then do if tY<=6 then UK[1]=d(oK,0X2,Mz)~=0X0;else if tY==0x00007 then(UK)[0Xc]=X();else do return UK;end;end;end;end;else if tY==4 then oK=X();else(UK)[6]=d(oK,Mz,1)~=0;end;end;else if not(tY<=0X01)then do if tY==2 then do for pu=0X1,AK do local Lu,xu,ou=1,nil,(nil);do while Lu<0X00003 do if not(Lu<=0x0)then do if Lu~=0X01 then do ou=Ez;end;Lu=0;else do xu=X();end;Lu=0X2;end;end;else eK[pu-1]=QK;do Lu=0X003;end;end;end;end;if xu==217 then ou=Q(az(nK),0X3);elseif xu==pA then ou=l();elseif xu==72 then ou=u();elseif xu==207 then do ou=Q(az(nK),X());end;elseif xu==134 then ou=Q(az(nK),2);elseif xu==52 then ou=false;elseif xu==0X0000E9 then ou=HA;elseif xu==0Xf1 then ou=l();elseif xu==3 then ou=l();elseif xu==0X00002D then ou=u();elseif xu==aA then ou=u();elseif xu~=198 then else do ou=l();end;end;local Iu=({ou,{}});for c7=0X00000,2 do if c7<=0x0 then GK[QK]=Iu;else if c7==1 then QK=QK+0X1;else if FK then do for nf=0x0,1 do if nf==0 then(mz)[Sz]=Iu;else Sz=Sz+0X1;end;end;end;end;end;end;end;end;end;else for KS=1,tK do local nS=nil;local DS=(1);while DS<=0X1 do if DS==0 then do for Xb,Nb in UA(e)do local Bb=P[Nb];local Eb=nS[Bb];if Eb==0x008 then local wZ=0X00;local DZ,aZ=nil,nil;repeat do if wZ<=0x0000 then DZ=eK[nS[Nb]];wZ=1;else do if wZ~=0X01 then if aZ then local EE=1;local kE=nil;repeat if EE==0 then kE=aZ[2];EE=2;else(nS)[Bb]=aZ[0X1];do EE=0X00000;end;end;until EE>=0X2;kE[#kE+0x1]={nS,Bb};end;wZ=3;else aZ=GK[DZ];wZ=2;end;end;end;end;until wZ>=0x0003;elseif Eb==7 then(nS)[Nb]=KS+nS[Nb]+0X001;end;end;end;do DS=2;end;else nS=UK[4][KS];DS=0x0;end;end;end;end;end;else if tY==0 then nK=X();else do FK=X()~=0;end;end;end;end;end;end;end;else end;end;end;end;end)(string.rep,12,10,nil,19,ipairs,next,string.byte,2,"\098xor",select,"\035",bit32,setfenv,string.match,rawset,9,0Xe,bit,0X10000,3,'\098a\110d',0x1f,11,1,true,0XF,string.gsub,setmetatable,coroutine,'',assert,6,table,0X000d,0X10,string.char,4,0x0bB,pcall,182,0X07,5,tostring,getfenv,0x0,{0XA859,0X290354a,1285760270,816140267,3347221528,0x0e2d526B2,1879977410,0X0092c93127,2169052501},...);