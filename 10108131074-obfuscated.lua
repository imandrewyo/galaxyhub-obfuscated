-- This file was generated using Luraph Obfuscator v13.5.8

return(function(Dp,up,op,Np,Op,bp,kp,fp,ep,Kp,ap,Ip,Bp,Yp,Hp,zp,Lp,Jp,hp,Xp,Tp,gp,vp,np,Wp,Fp,Rp,rp,xp,pp,qp,dp,Gp,jp,Pp,Vp,Sp,Ap,yp,sp,lp,M,...)local M3=(1);local B=2^Ip;local w=assert;local Z=(Fp);local Ep,U=nil,(nil);repeat if M3~=0 then Ep={};M3=0;else U=zp;M3=2;end;until M3==2;M3=0X00001;local Q,i,I,c=nil,nil,nil,(nil);do repeat if not(M3<=1)then if M3~=2 then i=Hp;do M3=0X02;end;else I=Kp.gsub;M3=0X000;end;else if M3==0 then c=string.byte;M3=4;else Q=np;do M3=3;end;end;end;until M3>3;end;local m=(vp);local t=(Dp);M3=0;local F,z=nil,(nil);while M3~=0X02 do if M3~=0X0 then do z=kp;end;M3=2;else do F=up;end;M3=1;end;end;local u=(next);local J=(Gp or table.unpack);local K=setmetatable;local j,D,A,k={[0]={[qp]=0X00000,1,Jp,0x3,0x0004,0X0005,0x6,7,0x8,xp,0Xa,0Xb,12,0xd,14,0xf},{[0]=0X1,0X0,3,0X2,5,4,op,6,9,8,0Xb,0X00A,0X000d,0xC,15,14},{[0]=0x2,0X0003,qp,1,6,0X7,0X0004,5,10,11,0X8,0X9,0X0000E,15,0X0000c,13},{[0X0]=sp,2,0X001,0,0X07,6,0x005,0x004,Ap,10,9,8,15,14,Lp,12},{[0X0]=0X4,5,0x00006,0X7,0,1,0X2,0X3,12,13,14,lp,8,9,0X00A,11},{[0x0]=5,0X4,7,0X6,1,qp,3,2,0XD,12,15,0x00e,0X9,8,0XB,0Xa},{[0X00000]=6,7,4,fp,2,0X00003,0X00000,0X00001,0XE,0X00f,0XC,0X0d,10,11,8,0X009},{[0]=0X007,6,5,0X04,0X3,0X2,1,0X0,0xF,0xe,13,0X00C,Ap,10,0x0009,8},{[0]=0X08,0X9,10,11,12,13,14,15,0,0X1,0x0002,3,0x004,5,0X006,7},{[0X0]=9,0X0008,0Xb,10,0XD,Yp,15,14,1,0,3,0X2,5,4,7,0X6},{[0x00000]=10,0XB,8,0X9,0X0000e,0X000F,12,Lp,2,sp,0,1,6,0x07,0X4,5},{[0X0]=0X00b,0xa,xp,8,lp,0XE,0xd,12,3,2,0x1,0,0x7,0X0006,5,0X04},{[0]=12,0xd,0XE,0XF,0X8,9,10,0XB,4,0x5,6,7,0,bp,Jp,0X3},{[0X0]=0xd,0XC,lp,14,9,0X8,11,10,5,4,0X7,0x0006,1,0x00,0X0003,2},{[0]=0xE,0XF,Yp,0X00d,10,11,8,0X09,0X00006,7,0X4,5,0X2,3,0X0,1},{[0]=0X000F,0X0000E,13,12,11,yp,0X9,Bp,0X00007,0X6,5,0X0004,3,0X00002,0X1,0}},rawset,bp,dp.wrap;M3=5;local R,o,s,x,y,L,l,f=nil,nil,nil,nil,nil,nil,nil,(nil);while M3<0Xa do do if not(M3<=0X4)then do if M3<=6 then do if M3~=5 then do L=I(m(L,5),hp,function(HQ)if c(HQ,2)==72 then do for l5=0x0,1 do if l5~=0 then return jp;else l=t(m(HQ,0X00001,1));end;end;end;else local Ja=nil;for A6=0,0X01 do if A6~=0X0 then do if not(l)then return Ja;else local gY=(F(Ja,l));l=nil;return gY;end;end;else Ja=i(t(HQ,0X0010));end;end;end;end);end;do M3=0X8;end;else R={0x5,0X4,0x0002};M3=4;end;end;else do if not(M3<=7)then if M3~=8 then do M3=7;end;else f=function()local p9=(1);local g9=nil;while(true)do do if not(p9<=0X00)then if p9==1 then g9=c(L,A,A);p9=0X2;else do A=A+1;end;p9=0;end;else return g9;end;end;end;end;M3=0XA;end;else do x=ap;end;M3=0X001;end;end;end;end;elseif M3<=0X1 then do if M3~=0 then do y=4294967296;end;M3=2;else M3=0X6;end;end;else if not(M3<=2)then if M3~=0x3 then do o=Vp;end;M3=0X0003;else s=(o and o()or Xp);do M3=9;end;end;elseend;end;end;end;local v=(rp);local b=2147483648;M3=1;local G,q=nil,nil;while true do if M3==0x000 then q=dp.yield;break;else G=b-0X1;M3=0X0;end;end;local Y=function()local BY,vY,CY,SY=c(L,A,A+3);do A=A+4;end;return SY*0X1000000+CY*0X10000+vY*0X100+BY;end;local d=y-0x1;local a=function()local DA,cA,WA=2,nil,nil;repeat do if DA<=0X00000 then return WA*y+cA;else if DA==0X001 then if not(WA>=b)then else do WA=WA-y;end;end;DA=0;else do cA,WA=Y(),Y();end;DA=1;end;end;end;until false;end;local V={[0X00000]=1};do local yS=2;do for td=0x1,31 do local Yd=0X00;do while Yd<=0X00001 do do if Yd==0 then V[td]=yS;do Yd=0X1;end;else yS=yS*2;do Yd=0X2;end;end;end;end;end;end;end;end;local X=(function(Og,Tg,ig)local Kg=(nil);do for LR=0X00000,0x2 do if not(LR<=0)then do if LR==0X01 then Kg=Kg-Kg%0X1;else return Kg;end;end;else Kg=(Og/V[Tg])%V[ig];end;end;end;end);local h=(function()local OB=0;local oB,XB=nil,nil;while OB<=0X01 do do if OB~=0X0 then XB=Y();do OB=2;end;else do oB=Y();end;OB=0X1;end;end;end;OB=0X000;local aB=(nil);while OB<=1 do if OB~=0X0 then aB=1;OB=2;else if oB==0X0000 and XB==0X0 then return 0X00000;end;OB=1;end;end;local BB=(-1)^X(XB,31,bp);local FB=(X(XB,0x14,0X0000b));local GB=X(XB,0,0X014)*y+oB;do OB=0;end;repeat if OB==0 then if FB==qp then if GB==qp then return BB*0X0;else local oE=(0x00000);repeat do if oE~=0 then aB=0X0;oE=0X0002;else do FB=0x01;end;oE=0x01;end;end;until oE>=2;end;else if FB~=Wp then elseif GB==0 then return BB*(0X0/0X0);else return BB*(1/0);end;end;OB=1;else do return BB*(2^(FB-1023))*(GB/B+aB);end;end;until(false);end);local r=((bit or bit32));local W=r and r[ep]or function(JS,ES)do JS=JS%y;end;local lS=0X0;ES=ES%y;local GS,pS=0,(nil);repeat if not(GS<=0X0000)then if GS~=1 then return lS+JS*pS+ES*pS;else while JS>0x000 and ES>0X0 do local vE=(JS%0X010);local DE,TE=ES%0x000010,(2);while true do if not(TE<=1)then if TE==2 then lS=lS+j[vE][DE]*pS;do TE=0X00000;end;else pS=pS*16;break;end;else if TE==0 then JS=(JS-vE)/0X10;TE=1;else ES=(ES-DE)/16;do TE=3;end;end;end;end;end;GS=0X2;end;else pS=1;GS=1;end;until false;end;local e=r and r.band or function(nX,eX)local yX=(2);while 0.7862729187556939 do if yX<=0 then eX=eX%y;do yX=0X0001;end;elseif yX==0X01 then return((nX+eX)-W(nX,eX))/2;else nX=nX%y;yX=0X0;end;end;end;local p=(r and r[pp]or function(AZ,ZZ)for fo=0x0,2 do if fo<=0 then AZ=AZ%y;elseif fo==0X1 then ZZ=ZZ%y;else return d-e(d-AZ,d-ZZ);end;end;end);local Qp=(0X1);local S,O,P=r and r[Sp]or function(m9)return d-(m9%y);end,r and r[Op],(r and r.rshift);O=O or function(Pg,gg)local Wg=2;repeat if Wg<=0 then return(Pg*V[gg])%y;else do if Wg~=1 then if not(gg>=0X20)then else return 0;end;do Wg=0X0001;end;else do if not(gg<0X0)then else return P(Pg,-gg);end;end;Wg=0X00000;end;end;end;until false;end;local E=(type);do M3=0X000;end;local H,T,N,g=nil,nil,nil,(nil);repeat if M3<=0X1 then if M3~=0X000 then P=P or function(aF,yF)local lF,IF=0X1,nil;while true do if lF<=1 then if lF~=0 then if yF>=32 then return 0;end;lF=2;else return IF-IF%1;end;else do if lF~=0X2 then do IF=(aF%y/V[yF]);end;do lF=0X000;end;else do if yF<0X00000 then do return O(aF,-yF);end;end;end;lF=3;end;end;end;end;end;do M3=3;end;else H=table.insert;M3=1;end;else if M3<=2 then do g=function()local RR=0;local KR=(nil);while(true)do if RR<=0X0 then KR=T();RR=2;else if RR~=0X1 then if not(KR>G)then else do return KR-y;end;end;RR=0X1;else do return KR;end;end;end;end;end;end;M3=5;elseif M3==0X003 then T=function()local lY,jY=0,(0X0);do while true do local nG=(c(L,A,A));A=A+0X1;do jY=p(jY,O(e(nG,127),lY));end;if e(nG,0X00080)==0x00 then return jY;end;lY=lY+7;end;end;end;M3=4;else N={[0X6]=fp,[0X2]=7,[0x9]=0X09,[7]=0,[4]=1,[7]=5,[3]=0X9,[0X0005]=0X6,[0X09]=8,[0x00003]=1,[3]=5};M3=0X2;end;end;until M3>0X4;local Mp=f();local wp=f();local Zp,Up,tp,Cp,C,mp,cp=nil,nil,nil,nil,nil,nil,(nil);do for Qu=0,7 do if not(Qu<=3)then if Qu<=0x0005 then if Qu~=4 then else C=Pp;end;else do if Qu~=6 then function cp()local Wd,dd,xd,ad,Sd,Ud=nil,nil,nil,nil,nil,nil;local Md,Qd={},5;while Qd~=0x0a do do if Qd<=0x4 then if not(Qd<=1)then do if Qd<=2 then Sd=Wd[5];Qd=0X00001;else if Qd==3 then xd=0x1;do Qd=0X0008;end;else dd={};Qd=0X0003;end;end;end;else if Qd~=0x0000 then Ud={};do Qd=9;end;else Wd[13]=f();Qd=6;end;end;else do if not(Qd<=0X6)then if Qd<=7 then Wd[Tp]=f();do Qd=0x000a;end;else do if Qd~=8 then for ag=1,ad do Sd[ag]={[0x5]=g(),[sp]=T(),[Np]=g(),[7]=f(),[Jp]=g(),[0X1]=f(),[0X6]=f()};end;Qd=0;else do ad=Y()-77691;end;Qd=2;end;end;end;else if Qd~=5 then(Wd)[1]=T();Qd=0x7;else do Wd={nil,Rp,Rp,{},{},Rp,{},nil,nil};end;Qd=4;end;end;end;end;end;end;do Wd[0xf]=f();end;local Fd=Y();do Qd=0;end;while Qd<2 do if Qd~=0X0 then(Wd)[10]=f();Qd=2;else for SO=1,Fd do local oO,UO=nil,nil;for DU=0X00,1 do do if DU==0X0 then oO=Y();else UO=Y();end;end;end;local bO=nil;do for Iv=0X000,1 do do if Iv~=0 then for f3=oO,UO do Wd[7][f3]=bO;end;else bO=Y();end;end;end;end;end;Qd=1;end;end;Qd=0X000;local Ad=nil;while Qd<=0x1 do if Qd==0 then Wd[0X0013]=Y();Qd=0X1;else Ad=f();do Qd=0X2;end;end;end;Qd=0;while 0X00BcBD4e3 do if Qd<=0X1 then do if Qd~=0 then Wd[6]=X(Ad,0X02,0X1)~=0;Qd=2;else Wd[0X2]=X(Ad,1,0X001)~=0;Qd=0x01;end;end;else do if Qd==2 then Wd[0X00003]=T();Qd=0x3;else Wd[0X9]=dd;do break;end;end;end;end;end;for J6=1,T()do dd[J6]={f(),T()};end;local Cd=(Y()-202);local qd=Wd[4];Qd=6;local Bd,Ed,hd=nil,nil,nil;repeat if Qd<=3 then do if Qd<=0X0001 then if Qd==0X00 then do Wd[0XE]=Y();end;Qd=8;else Bd=Y()-0X00146C3;do Qd=0X007;end;end;else if Qd==0x0002 then(Wd)[8]=T();Qd=0X0;else hd=f()~=0X0;Qd=4;end;end;end;else if Qd<=5 then if Qd==0X00004 then for c4=1,Bd do local Q4=f();local H4=nil;(Md)[c4-bp]=xd;local o4=nil;local s4=0x003;while s4~=5 do if not(s4<=0X1)then if not(s4<=2)then if s4~=3 then xd=xd+1;s4=0X2;else do if Q4==0X000058 then H4=Y();elseif Q4==244 then H4=m(tp(Ed),Np);elseif Q4==242 then H4=false;elseif Q4==120 then H4=m(tp(Ed),h()+Y());elseif Q4==144 then do H4=m(tp(Ed),h()+Y());end;elseif Q4==gp then H4=h();else if Q4==0X00001F then H4=true;elseif Q4==0X5a then H4=Y();else if Q4~=195 then else H4=a();end;end;end;end;s4=1;end;else if not(hd)then else(Ep)[Qp]=o4;Qp=Qp+0X1;end;s4=5;end;else if s4~=0X0 then do o4={H4,{}};end;s4=0X000;else(Ud)[xd]=o4;s4=4;end;end;end;end;do Qd=5;end;else for lF=1,ad do local pF,mF=0,(nil);do while pF~=0X2 do if pF==0 then do mF=Wd[5][lF];end;pF=0x01;else for MD,eD in ipairs(R)do local LD,sD=nil,nil;local nD=(2);while true do if not(nD<=0)then if nD~=0X1 then LD=N[eD];nD=0X00001;else do sD=mF[LD];end;nD=0;end;else if sD==0X8 then local f8=0X02;local g8,m8=nil,nil;while'\05907\068\115'do if not(f8<=0x00)then do if f8==1 then m8=Ud[g8];f8=0;else g8=Md[mF[eD]];f8=0X1;end;end;else if m8 then local jF,RF=0x2,(nil);while jF<0X003 do do if not(jF<=0x000)then if jF==0X1 then RF=m8[Jp];jF=0X0;else(mF)[LD]=m8[1];jF=0X00001;end;else(RF)[#RF+1]={mF,LD};jF=3;end;end;end;end;break;end;end;else if sD==0X7 then do(mF)[eD]=lF+mF[eD]+0X00001;end;end;end;break;end;end;end;pF=0x2;end;end;end;end;Qd=0X2;end;else if Qd==6 then for MM=0X0,Cd-1 do(qd)[MM]=cp();end;Qd=0x1;else Ed=f();Qd=3;end;end;end;until Qd>7;do return Wd;end;end;else function mp(iw,Aw,cw)local Kw,Cw=Aw[8],(Aw[1]);local vw=Aw[7];local gw,bw,zw=Aw[0X2],Aw[6],Aw[0X00003];local Tw,Vw=Aw[5],(Aw[4]);local Sw=(K({},{__mode='v'}));local Gw=(nil);Gw=function(...)local ri=({});local Ji=0x1;local ci=(o and o()or _ENV);local Pi,li={[2]=ri,[1]=Aw},((ci==s and cw or ci));local Ki,ki=Up(...);Ki=Ki-0X01;do for vM=0X0,Ki do if not(Kw>vM)then break;else ri[vM]=ki[vM+1];end;end;end;if not gw then ki=nil;else if bw then ri[Kw]={n=Ki>=Kw and Ki-Kw+0X1 or 0,J(ki,Kw+0X001,Ki+0x1)};end;end;local Ui=(0);if li~=ci then if not(x)then do _ENV=li;end;else x(Gw,li);end;end;local Bi,ti,Oi,xi=U(function()while 0.8391980648793802 do local Sd=Tw[Ji];local nd=Sd[3];Ji=Ji+1;do if not(nd<0X2E)then do if not(nd<0X0045)then if nd>=80 then do if not(nd<86)then do if not(nd<0X000059)then if not(nd<90)then if nd==0X5B then local f3=Sd[0X0002];ri[f3]=ri[f3](J(ri,f3+0X1,Ui));Ui=f3;else ri[Sd[2]]=li[Sd[6]];end;else(ri)[Sd[0x2]]={};end;else if nd>=87 then if nd~=0X58 then if not(ri[Sd[0x5]]<=Sd[0X01])then Ji=Sd[0X00002];end;else local sc=Sd[0X02];local oc,Lc,kc=ri[sc]();if not(oc)then else do(ri)[sc+1]=Lc;end;do(ri)[sc+2]=kc;end;Ji=Sd[5];end;end;else do ri[Sd[0x2]]=-ri[Sd[5]];end;end;end;end;else do if nd>=0X000053 then if nd>=84 then do if nd~=0x55 then local zx=(Sd[2]);local Ux=(ri[zx]);local Xx,Sx=ri[zx+0X1],ri[zx+0X00002];(ri)[zx]=k(function()do for mB=Ux,Xx,Sx do q(true,mB);end;end;end);Ji=Sd[0X05];else do ri[Sd[2]]=ri[Sd[0X05]]<=ri[Sd[4]];end;end;end;else local Dy=Sd[2];(ri)[Dy]=ri[Dy](ri[Dy+0X1],ri[Dy+0X2]);Ui=Dy;end;else if not(nd>=0X00051)then if Sd[4]~=181 then if not ri[Sd[2]]then Ji=Sd[0x00005];end;else Ji=Ji-0x1;(Tw)[Ji]={[5]=(Sd[0X5]-248),[3]=62,[0x2]=(Sd[2]-248)};end;else if nd~=82 then local Rc=iw[Sd[5]];(ri)[Sd[2]]=Rc[1][Rc[0X00002]];else(ri[Sd[0X2]])[ri[Sd[0X0005]]]=Sd[0X1];end;end;end;end;end;end;else if not(nd>=74)then do if not(nd>=0X47)then if nd==0X00046 then repeat local cl,Sl=Sw,(ri);if#cl>0 then local Ga={};for US,sS in u,cl do for gY,OY in u,sS do do if OY[0x01]==Sl and OY[2]>=0x0000 then local W9=OY[2];if not(not Ga[W9])then else Ga[W9]={Sl[W9]};end;OY[0X1]=Ga[W9];do OY[0X2]=0X00001;end;end;end;end;end;end;until true;do return;end;else do(ri)[Sd[2]]=nil;end;end;else if not(nd>=0x48)then local Jl=(Sd[2]);(ri[Jl])(J(ri,Jl+1,Ui));Ui=Jl-1;else if nd==0x00049 then local LW=(Sd[2]);local SW,UW=ri[LW]();do if not(SW)then else Ji=Sd[5];ri[LW+3]=UW;end;end;else ri[Sd[0X2]]=ri[Sd[0X5]]+ri[Sd[4]];end;end;end;end;else if nd<0X4d then if nd<0X4B then Pi[Sd[0X5]]=ri[Sd[2]];else if nd~=76 then local Cv=(Sd[2]);(ri[Cv])(ri[Cv+0X001],ri[Cv+2]);Ui=Cv-1;else do ri[Sd[0X2]]=ri[Sd[0X00005]]~=ri[Sd[0X0004]];end;end;end;else if not(nd<0X004E)then if nd==0X4f then do if ri[Sd[5]]<ri[Sd[4]]then Ji=Sd[0X2];end;end;else do ri[Sd[2]]=ri[Sd[5]]>ri[Sd[4]];end;end;else local lm=(Vw[Sd[5]]);local Xm=lm[9];local mm=nil;local Km=#Xm;do if Km>0 then mm={};for Qu=0X1,Km do local tu=(Xm[Qu]);do if tu[0X001]~=0 then do mm[Qu-1]=iw[tu[0X2]];end;else mm[Qu-0X1]={ri,tu[0x00002]};end;end;end;H(Sw,mm);end;end;ri[Sd[2]]=mp(mm,lm,li);end;end;end;end;elseif nd>=57 then if not(nd>=0X03f)then if not(nd>=0x003C)then do if nd<58 then if ri[Sd[5]]==Sd[1]then else do Ji=Sd[0X00002];end;end;else do if nd~=0X00003B then ri[Sd[0X0002]]=ri[Sd[0X5]]>=ri[Sd[4]];else do repeat local JE,lE=Sw,ri;if#JE>0 then local RQ={};for Ao,fo in u,JE do for Zd,Hd in u,fo do if Hd[0x1]==lE and Hd[2]>=0X00 then local bk=(Hd[0X02]);do if not RQ[bk]then(RQ)[bk]={lE[bk]};end;end;Hd[1]=RQ[bk];(Hd)[2]=1;end;end;end;end;until true;end;return false,Sd[0X00002],Ui;end;end;end;end;else if not(nd<0X0003d)then if nd==0X3E then ri[Sd[0x0002]]=ri[Sd[5]];else local BU=(Sd[0x002]);do(ri)[BU]=ri[BU](ri[BU+0x0001]);end;do Ui=BU;end;end;else Ui=Sd[0X2];ri[Ui]();Ui=Ui-1;end;end;else if not(nd>=0x42)then do if nd<64 then li[Sd[0X6]]=ri[Sd[2]];else if nd~=0x041 then do ri[Sd[2]]=ri[Sd[0X5]]==ri[Sd[4]];end;else ri[Sd[2]]=ri[Sd[0X00005]]*ri[Sd[4]];end;end;end;else if nd>=67 then if nd~=68 then ri[Sd[2]]=ri[Sd[5]]<ri[Sd[4]];else if ri[Sd[5]]==ri[Sd[4]]then else do Ji=Sd[2];end;end;end;else repeat local iA,bA=Sw,ri;do if#iA>0x0 then local hs=({});for sw,Nw in u,iA do do for ls,Ts in u,Nw do if not(Ts[0X1]==bA and Ts[2]>=0X00000)then else local bu=Ts[0X2];if not(not hs[bu])then else hs[bu]={bA[bu]};end;do(Ts)[0x001]=hs[bu];end;Ts[0X2]=0X0001;end;end;end;end;end;end;until true;return true,Sd[2],0X1;end;end;end;else do if nd>=51 then if nd>=54 then if not(nd<55)then if nd~=0X38 then do ri[Sd[2]]=ri[Sd[5]]-ri[Sd[4]];end;else(ri)[Sd[2]]=O(ri[Sd[5]],ri[Sd[4]]);end;else do ri[Sd[0X2]]=true;end;end;else if not(nd>=52)then local dC=(Sd[0X05]);local zC=(Sd[0x0002]);if dC==0X0 then else Ui=zC+dC-0X1;end;local kC,nC=nil,(nil);local TC=(Sd[4]);if dC~=0X01 then do kC,nC=Up(ri[zC](J(ri,zC+1,Ui)));end;else kC,nC=Up(ri[zC]());end;if TC==0X001 then Ui=zC-0x1;else if TC==0x0 then do kC=kC+zC-1;end;Ui=kC;else kC=zC+TC-0X2;Ui=kC+0x00001;end;local sN=(0);for NA=zC,kC do do sN=sN+0x1;end;ri[NA]=nC[sN];end;end;else do if nd==0X35 then ri[Sd[0X2]]=Sd[0X06];else if not(not(ri[Sd[0x5]]<=ri[Sd[0X0004]]))then else Ji=Sd[2];end;end;end;end;end;else if not(nd<48)then if not(nd<0X000031)then do if nd==0X32 then local PX=Sd[2];local lX=k(function(...)q();do for Y8,J8,r8,G8,N8,f8,I8,E8,R8,h8 in...do q(true,{Y8,J8,r8,G8,N8,f8,I8,E8,R8,h8});end;end;end);lX(ri[PX],ri[PX+1],ri[PX+2]);Ui=PX;ri[PX]=lX;Ji=Sd[5];else(ri)[Sd[0X02]]=#ri[Sd[0x005]];end;end;else(ri)[Sd[2]]=S(ri[Sd[5]]);end;else if nd~=47 then if ri[Sd[0X05]]~=ri[Sd[0X4]]then else Ji=Sd[2];end;else if Sd[4]==0X0094 then do Ji=Ji-0X1;end;(Tw)[Ji]={[0X5]=(Sd[5]-148),[0X0002]=(Sd[0X2]-0x094),[0x3]=0X3};elseif Sd[4]~=41 then local wC=Sd[0x00002];for tc=wC,wC+(Sd[5]-0X0001)do(ri)[tc]=ki[Kw+(tc-wC)+1];end;else do Ji=Ji-1;end;Tw[Ji]={[2]=(Sd[0X00002]-0X05B),[0x5]=(Sd[0X5]-91),[0X00003]=70};end;end;end;end;end;end;end;else if nd>=0x0017 then do if nd<0X22 then do if not(nd>=0x1C)then if not(nd>=25)then if nd~=24 then do Ui=Sd[2];end;ri[Ui]=ri[Ui]();else(ri[Sd[2]])[Sd[6]]=ri[Sd[0X4]];end;else if nd<26 then local w8=Sd[2];local X8=((Sd[0X4]-0X1)*50);local M8=(ri[w8]);for wH=0X00001,Sd[0X5]do(M8)[X8+wH]=ri[w8+wH];end;else if nd==0X0001B then local hP=iw[Sd[5]];do(hP[1])[hP[2]]=ri[Sd[0X002]];end;else do if Sd[4]==0X68 then Ji=Ji-1;(Tw)[Ji]={[5]=(Sd[5]-223),[2]=(Sd[0x0002]-0XDf),[3]=70};else if Sd[0X04]==0X05 then do Ji=Ji-0X1;end;do Tw[Ji]={[0X2]=(Sd[2]-0X000f8),[0x3]=86,[5]=(Sd[0x005]-248)};end;else if Sd[4]~=0XE0 then ri[Sd[0X00002]]=ki[Kw+0X01];else Ji=Ji-0X001;do(Tw)[Ji]={[3]=0X45,[0X2]=(Sd[0X0002]-244),[5]=(Sd[5]-244)};end;end;end;end;end;end;end;end;else do if nd>=31 then do if not(nd<32)then if nd~=0X21 then local P8=(Sd[0X002]);Ui=P8+Sd[5]-1;ri[P8]=ri[P8](J(ri,P8+1,Ui));Ui=P8;else local mW=(Sd[5]);local tW=(ri[mW]);for BV=mW+0X1,Sd[4]do tW=tW..ri[BV];end;ri[Sd[2]]=tW;end;else repeat local KL,VL=Sw,ri;if not(#KL>0X0)then else local WQ=({});for el,ol in u,KL do do for DP,mP in u,ol do do if mP[1]==VL and mP[2]>=0 then local Wb=mP[0X02];if not(not WQ[Wb])then else WQ[Wb]={VL[Wb]};end;do mP[0X1]=WQ[Wb];end;do mP[2]=1;end;end;end;end;end;end;end;until true;local Q4=(Sd[0x00002]);return false,Q4,Q4;end;end;elseif not(nd>=29)then(ri)[Sd[0X2]]=Cp[Sd[0x005]];else if nd~=0X1E then if Sd[0x0004]~=0X0084 then(ri)[Sd[2]]=not ri[Sd[5]];else Ji=Ji-0X001;do(Tw)[Ji]={[0X2]=(Sd[0X2]-94),[3]=62,[0X5]=(Sd[0x0005]-0X05E)};end;end;else ri[Sd[0X00002]]=Sd[0X6];end;end;end;end;end;else if not(nd>=40)then if nd>=0X25 then if not(nd<0X00026)then if nd~=39 then if Sd[4]~=174 then do for WK=Sd[2],Sd[5]do ri[WK]=nil;end;end;else Ji=Ji-1;Tw[Ji]={[0x0003]=59,[2]=(Sd[2]-56),[5]=(Sd[5]-56)};end;else(Cp)[Sd[0x05]]=ri[Sd[0x2]];end;else ri[Sd[2]]=ri[Sd[0X5]]%ri[Sd[4]];end;else do if not(nd>=35)then(ri)[Sd[2]]=p(ri[Sd[0X05]],ri[Sd[4]]);elseif nd~=0x24 then local Pe=(Sd[2]);local Ce=(Sd[0x4]-0X0001)*0X032;local fe=(ri[Pe]);for Sy=0X1,Ui-Pe do(fe)[Ce+Sy]=ri[Pe+Sy];end;else local h_=ri[Sd[0X00005]]/ri[Sd[4]];do ri[Sd[0X2]]=h_-h_%1;end;end;end;end;else if not(nd>=43)then if not(nd>=41)then ri[Sd[0X2]]=ri[Sd[0X0005]]%Sd[0x1];elseif nd==0X0002a then do if Sd[0X4]~=129 then repeat local j1,z1,l1=Sw,ri,Sd[2];do if not(#j1>0)then else local a3={};do for Jv,Mv in u,j1 do for xN,hN in u,Mv do if hN[1]==z1 and hN[2]>=l1 then local XN=hN[0X2];if not(not a3[XN])then else(a3)[XN]={z1[XN]};end;(hN)[1]=a3[XN];(hN)[2]=1;end;end;end;end;end;end;until true;else Ji=Ji-0X1;(Tw)[Ji]={[5]=(Sd[0X0005]-143),[2]=(Sd[2]-143),[0X0003]=49};end;end;else ri[Sd[2]]=ri[Sd[0X5]]~=Sd[1];end;else if nd>=44 then do if nd~=45 then(ri)[Sd[0X2]]=ri[Sd[0x5]][Sd[0X1]];else ri[Sd[0X2]][Sd[6]]=Sd[1];end;end;else do repeat local MI,JI=Sw,ri;if#MI>0x0 then local Zv={};for BX,LX in u,MI do for rH,EH in u,LX do do if not(EH[1]==JI and EH[2]>=0)then else local pr=EH[0X0002];if not Zv[pr]then Zv[pr]={JI[pr]};end;(EH)[1]=Zv[pr];(EH)[2]=1;end;end;end;end;end;until'\114z{7\104\112\047';end;return true,Sd[0X2],0;end;end;end;end;end;else if not(nd<0X000B)then if nd<17 then if not(nd<14)then if not(nd<0Xf)then if nd==0X10 then if ri[Sd[5]]<=ri[Sd[0x4]]then Ji=Sd[0X2];end;else do ri[Sd[0x0002]]=false;end;end;else local u6=Sd[2];local w6=(k(function(...)q();do for JN in...do q(true,JN);end;end;end));(w6)(ri[u6],ri[u6+1],ri[u6+2]);Ui=u6;(ri)[u6]=w6;do Ji=Sd[5];end;end;else if nd>=12 then if nd~=13 then(ri)[Sd[0X2]]=Sd[0X6];else ri[Sd[0x00002]]=ri[Sd[5]]/ri[Sd[0X4]];end;else(ri)[Sd[2]]=ri[Sd[5]][ri[Sd[4]]];end;end;else do if not(nd<20)then do if not(nd<0x0015)then if nd~=22 then local Y1=Sd[2];local G1=ri[Sd[0x0005]];(ri)[Y1+0X1]=G1;(ri)[Y1]=G1[Sd[0X1]];else(ri)[Sd[2]]=Pi[Sd[0x05]];end;else ri[Sd[2]]=P(ri[Sd[0X05]],ri[Sd[4]]);end;end;else if nd>=0x000012 then do if nd~=19 then ri[Sd[0X2]]=W(ri[Sd[0X5]],ri[Sd[4]]);else if ri[Sd[5]]~=Sd[1]then else Ji=Sd[2];end;end;end;else if not(ri[Sd[0x2]])then else Ji=Sd[5];end;end;end;end;end;else if not(nd<0x0005)then if not(nd<0X08)then if nd<9 then local sv=Sd[0X0002];Ui=sv+Sd[5]-1;ri[sv](J(ri,sv+1,Ui));Ui=sv-0X01;else if nd==0X00a then do Ji=Sd[0X005];end;else local xF=Sd[0X2];ri[xF](ri[xF+0X001]);Ui=xF-0x1;end;end;else if not(nd>=0X6)then local kU=Sd[2];local MU=(k(function(...)(q)();for GJ,LJ in...do(q)(true,GJ,LJ);end;end));MU(ri[kU],ri[kU+1],ri[kU+2]);do Ui=kU;end;(ri)[kU]=MU;Ji=Sd[0x5];else if nd==7 then do(ri)[Sd[0X002]]={J({},0X1,Sd[5])};end;else do ri[Sd[0X2]][ri[Sd[5]]]=ri[Sd[4]];end;end;end;end;else if nd>=0x0002 then do if not(nd>=0X0003)then do repeat local AI,qI=Sw,(ri);if#AI>0 then local cl={};for cV,uV in u,AI do for JZ,bZ in u,uV do if not(bZ[0X1]==qI and bZ[2]>=0)then else local uP=bZ[0X2];if not cl[uP]then cl[uP]={qI[uP]};end;bZ[1]=cl[uP];bZ[0x00002]=0x1;end;end;end;end;until true;end;local Tg=(Sd[2]);return false,Tg,Tg+Sd[0X5]-0X2;else do if nd~=4 then if Sd[4]==179 then Ji=Ji-0X1;(Tw)[Ji]={[0X005]=(Sd[0X5]-0Xf1),[2]=(Sd[2]-0XF1),[3]=69};else local gL,lL=Ki-Kw,Sd[2];do if gL<0X0 then do gL=-0X001;end;end;end;for DY=lL,lL+gL do do(ri)[DY]=ki[Kw+(DY-lL)+1];end;end;do Ui=lL+gL;end;end;else local du=(Sd[0x5]);ri[Sd[2]]=ri[du]..ri[du+1];end;end;end;end;else if nd==0X1 then do(ri)[Sd[2]]=ri[Sd[0x5]]^ri[Sd[4]];end;else local FZ=Sd[0X0002];local VZ,JZ=ri[FZ]();do if not(VZ)then else(ri)[FZ+1]=JZ;Ji=Sd[5];end;end;end;end;end;end;end;end;end;end;end);do if Bi then if ti then if xi==1 then return ri[Oi]();else return ri[Oi](J(ri,Oi+0x0001,Ui));end;else if not(Oi)then else return J(ri,Oi,xi);end;end;else do if E(ti)~="string"then(C)(ti,0);else if z(ti,"attempt to yield across metamethod/C%-call boundary")then return coroutine.yield();end;do if z(ti,'^.-:%d+\058\032')then(C)("Luraph Script:"..(vw[Ji-1]or"(internal)")..':\032'..Q(ti),0X00000);else(C)(ti,0);end;end;end;end;end;end;end;if not(x)then else x(Gw,cw);end;return Gw;end;end;end;end;else if Qu<=1 then do if Qu~=0 then Up=function(...)return Z("#",...),{...};end;else Zp=function(Yy)local jy=({c(L,A,A+3)});local ky=(W(jy[1],wp));local Qy=(W(jy[2],wp));local zy,sy=nil,(nil);do for T4=0X0,0X1 do if T4==0X0 then zy=W(jy[0x00003],wp);else do sy=W(jy[4],wp);end;end;end;end;do wp=(229*wp+Yy)%256;end;A=A+0x04;do return sy*16777216+zy*0X10000+Qy*0X100+ky;end;end;end;end;else if Qu==0X2 then tp=function(xl)local ll=Y();local el="";for UD=0X1,ll,7997 do local bD,pD=UD+7997-0X1,(nil);for qS=0,3 do if qS<=0X1 then if qS~=0 then do pD={c(L,A+UD-bp,A+bD-0X001)};end;else if bD>ll then bD=ll;end;end;else if qS~=2 then do el=el..i(J(pD));end;else for H3=1,#pD do do(pD)[H3]=W(pD[H3],Mp);end;do Mp=(xl*Mp+1)%0x100;end;end;end;end;end;end;local Ul=(0);repeat do if Ul~=0 then return el;else do A=A+ll;end;Ul=0X1;end;end;until(false);end;else do Cp={};end;end;end;end;end;end;local ip=cp();M3=0;while M3~=0X2 do if M3~=0 then Ep=nil;do M3=0X2;end;else Cp[0X0002]=Ep;M3=1;end;end;return mp(Rp,ip,s)(...);end)(tonumber,string.rep,0x7,0X4,"\108s\104\105f\116",1,string.match,0X5,"\098xor",string,setfenv,52,8,12,string.char,pcall,0X00d,2,"..",_ENV,14,0x00A9,string.sub,tostring,2047,select,nil,rawget,0X009,"bo\114",0,coroutine,unpack,'',error,getfenv,'\098no\116',11,10,3,15,{0X53C8,2799479962,0X7146070,3496256954,0X012E26a9C,0X0C762697c,439699526,1737412759,1104075467},...);